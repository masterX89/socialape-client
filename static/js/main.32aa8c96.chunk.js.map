{"version":3,"sources":["redux/reducers/userReducer.js","redux/reducers/dataReducer.js","redux/reducers/uiReducer.js","redux/store.js","redux/types.js","constants/Constants.js","redux/actions/userActions.js","util/MyButton.js","redux/actions/dataActions.js","components/scream/PostScream.js","components/layout/Navbar.js","util/AuthRoute.js","components/scream/DeleteScream.js","components/scream/LikeButton.js","components/scream/Comments.js","components/scream/CommentForm.js","components/scream/ScreamDialog.js","components/scream/Scream.js","components/profile/EditDetails.js","components/profile/Profile.js","pages/Home.js","pages/Login.js","pages/Signup.js","components/profile/StaticProfile.js","pages/User.js","App.js","theme/theme.js","serviceWorker.js","index.js","images/icon.jpg"],"names":["initialState","authenticated","loading","credentials","likes","notifications","screams","scream","errors","middleware","thunk","reducers","combineReducers","user","state","arguments","length","undefined","action","type","Object","objectSpread","payload","concat","toConsumableArray","userHandle","handle","screamId","filter","like","data","index","findIndex","likeCount","splice","commentCount","comments","UI","store","createStore","compose","applyMiddleware","apply","FIREBASE_CORE_HOST","logoutUser","dispatch","localStorage","removeItem","axios","defaults","headers","common","getUserData","get","then","res","catch","err","console","log","setAuthorizationHeader","token","FBIdToken","setItem","MyButton","_ref","children","onClick","tip","btnClassName","tipClassName","placement","react_default","a","createElement","Tooltip","title","className","IconButton","clearErrors","PostScream","open","body","handleOpen","_this","setState","handleClose","props","handleChange","event","defineProperty","target","name","value","handleSubmit","preventDefault","newScream","postScream","nextProps","nextContext","this","_this$props","classes","react","Add_default","Dialog","onClose","fullWidth","maxWidth","closeButton","Close_default","DialogTitle","DialogContent","onSubmit","TextField","label","multiline","rows","placeholder","error","helperText","textField","onChange","Button","submitButton","variant","color","disabled","CircularProgress","size","progressSpinner","Component","connect","post","response","withStyles","theme","form","position","float","left","top","Navbar","AppBar","Toolbar","scream_PostScream","react_router_dom","to","Home_default","Notifications_default","component","Link","rest","objectWithoutProperties","react_router","assign","render","DeleteScream","deleteScream","deleteButton","DeleteOutline_default","DialogActions","delete","LikeButton","likedScream","find","likeScream","unlikeScream","Favorite_default","FavoriteBorder_default","mapActionsToProps","Comments","Grid","container","map","comment","createdAt","userImage","key","item","sm","src","alt","commentImage","commentData","Typography","dayjs","format","invisibleSeparator","visibleSeparator","width","height","objectFit","borderRadius","marginLeft","CommentForm","submitComment","style","textAlign","button","ScreamDialog","oldPath","newPath","window","location","pathname","history","pushState","getScream","openDialog","_this$props2","_this$props2$scream","dialogMarkup","spinnerDiv","thickness","spacing","profileImage","scream_LikeButton","Chat_default","scream_CommentForm","scream_Comments","expandButton","UnfoldMore_default","dialogContent","padding","marginTop","marginBottom","Scream","extend","relativeTime","_this$props$scream","_this$props$user","scream_DeleteScream","Card","card","CardMedia","image","CardContent","content","typography","fromNow","scream_ScreamDialog","display","minWidth","EditDetails","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","mapUserDetailsToState","userDetails","bio","website","editUserDetails","Edit_default","Profile","handleImageChange","files","formData","FormData","append","uploadImage","handleEditPicture","document","getElementById","click","handleLogout","_this$props$user$cred","imageUrl","Paper","paper","profile","id","hidden","Location","LocationOn_default","Link_default","href","rel","CalendarToday_default","KeyboardReturn_default","profile_EditDetails","align","buttons","mapActionToProps","& .image-wrapper","& button","& .profile-image","& .profile-details","& span, svg","verticalAlign","& a","palette","primary","main","& hr","border","margin","& svg.button","&:hover","cursor","Home","getScreams","_this$props$data","recentScreamsMarkup","scream_Scream","xs","profile_Profile","Login","userData","email","password","loginUser","AppIcon","noValidate","general","customError","progress","push","Signup","newUserData","confirmPassword","signupUser","custoemError","_props$profile","Link_Link_default","User","screamIdParam","_this2","match","params","screamsMarkup","profile_StaticProfile","createMuiTheme","light","dark","contrastText","secondary","maxhHeight","fontSize","borderBottom","jwtDecode","exp","Date","now","App","MuiThemeProvider_default","es","basename","layout_Navbar","exact","path","util_AuthRoute","Boolean","hostname","ReactDOM","src_App_0","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"kXAEMA,EAAe,CACjBC,eAAe,EACfC,SAAS,EACTC,YAAa,GACbC,MAAO,GACPC,cAAe,ICKbL,EAAe,CACjBM,QAAS,GACTC,OAAQ,GACRL,SAAS,GCbPF,EAAe,CACjBE,SAAS,EACTM,OAAQ,MCKNC,EAAa,CAACC,KAEdC,EAAWC,YAAgB,CAC7BC,KHFW,WAAwC,IAA9BC,EAA8BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtBf,EAAckB,EAAQH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACnD,OAAQC,EAAOC,MACX,IIXyB,oBJYrB,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACAN,EADP,CAEIb,eAAe,IAEvB,IIf2B,sBJgBvB,OAAOD,EACX,IIhBgB,WJiBZ,OAAOoB,OAAAC,EAAA,EAAAD,CAAA,CACHnB,eAAe,EACfC,SAAS,GACNgB,EAAOI,SAElB,IIrBoB,eJsBhB,OAAOF,OAAAC,EAAA,EAAAD,CAAA,GACAN,EADP,CAEIZ,SAAS,IAEjB,IIfmB,cJgBf,OAAOkB,OAAAC,EAAA,EAAAD,CAAA,GACAN,EADP,CAEIV,MAAK,GAAAmB,OAAAH,OAAAI,EAAA,EAAAJ,CACEN,EAAMV,OADR,CAED,CACIqB,WAAYX,EAAMX,YAAYuB,OAC9BC,SAAUT,EAAOI,QAAQK,cAIzC,IIzBqB,gBJ0BjB,OAAOP,OAAAC,EAAA,EAAAD,CAAA,GACAN,EADP,CAEIV,MAAOU,EAAMV,MAAMwB,OAAO,SAAAC,GAAI,OAAIA,EAAKF,WAAaT,EAAOI,QAAQK,aAE3E,QACI,OAAOb,IGlCfgB,KFKW,WAAwC,IAC/CC,EADiBjB,EAA8BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtBf,EAAckB,EAAQH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAEnD,OAAQC,EAAOC,MACX,IGXoB,eHYhB,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACAN,EADP,CAEIZ,SAAS,IAEjB,IGdmB,cHef,OAAOkB,OAAAC,EAAA,EAAAD,CAAA,GACAN,EADP,CAEIR,QAASY,EAAOI,QAChBpB,SAAS,IAEjB,IGlBkB,aHmBd,OAAOkB,OAAAC,EAAA,EAAAD,CAAA,GACAN,EADP,CAEIP,OAAQW,EAAOI,UAEvB,IGtBmB,cHuBnB,IGtBqB,gBH+BjB,OARAS,EAAQjB,EAAMR,QAAQ0B,UAAU,SAACzB,GAAD,OAAYA,EAAOoB,WAAaT,EAAOI,QAAQK,WAC/Eb,EAAMR,QAAQyB,GAASb,EAAOI,QAC1BR,EAAMP,OAAOoB,WAAaT,EAAOI,QAAQK,WACzCb,EAAMP,OAANa,OAAAC,EAAA,EAAAD,CAAA,GACON,EAAMP,OADb,CAEI0B,UAAWf,EAAOI,QAAQW,aAG3Bb,OAAAC,EAAA,EAAAD,CAAA,GACAN,GAEX,IGjCqB,gBHoCjB,OAFAiB,EAAQjB,EAAMR,QAAQ0B,UAAU,SAACzB,GAAD,OAAYA,EAAOoB,WAAaT,EAAOI,UACvER,EAAMR,QAAQ4B,OAAOH,EAAO,GACrBX,OAAAC,EAAA,EAAAD,CAAA,GACAN,GAEX,IG3CmB,cH4Cf,OAAOM,OAAAC,EAAA,EAAAD,CAAA,GACAN,EADP,CAEIR,QAAO,CACHY,EAAOI,SADJC,OAAAH,OAAAI,EAAA,EAAAJ,CAEAN,EAAMR,YAGrB,IG9CqB,iBHoDjB,OALAyB,EAAQjB,EAAMR,QAAQ0B,UAAU,SAACzB,GAAD,OAAYA,EAAOoB,WAAaT,EAAOI,QAAQK,WAC/Eb,EAAMR,QAAQyB,GAAdX,OAAAC,EAAA,EAAAD,CAAA,GACON,EAAMR,QAAQyB,GADrB,CAEII,aAAcrB,EAAMR,QAAQyB,GAAOI,aAAe,IAE/Cf,OAAAC,EAAA,EAAAD,CAAA,GACAN,EADP,CAEIP,OAAOa,OAAAC,EAAA,EAAAD,CAAA,GACAN,EAAMP,OADP,CAEF4B,aAAcrB,EAAMP,OAAO4B,aAAe,EAC1CC,SAAQ,CAAGlB,EAAOI,SAAVC,OAAAH,OAAAI,EAAA,EAAAJ,CAAsBN,EAAMP,OAAO6B,eAGvD,QACI,OAAOtB,IEjEfuB,GDPW,WAAwC,IAA9BvB,EAA8BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtBf,EAAckB,EAAQH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACnD,OAAQC,EAAOC,MACX,IEHkB,aFId,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACAN,EADP,CAEIZ,SAAS,EACTM,OAAQU,EAAOI,UAEvB,IENoB,eFOhB,OAAOF,OAAAC,EAAA,EAAAD,CAAA,GACAN,EADP,CAEIZ,SAAS,EACTM,OAAQ,OAEhB,IEdkB,aFed,OAAOY,OAAAC,EAAA,EAAAD,CAAA,GACAN,EADP,CAEIZ,SAAS,IAEjB,IElBuB,kBFmBnB,OAAOkB,OAAAC,EAAA,EAAAD,CAAA,GACAN,EADP,CAEIZ,SAAS,IAEjB,QACI,OAAOY,MCRJwB,EAFDC,YAAY5B,EAfL,GAe6B6B,YAAQC,IAAeC,WAAf,EAAmBjC,KEtBhEkC,EAAqB,kDCqBrBC,EAAa,kBAAM,SAACC,GAC7BC,aAAaC,WAAW,oBACjBC,IAAMC,SAASC,QAAQC,OAAvB,cACPN,EAAS,CAAC1B,KFtBqB,0BEyBtBiC,EAAc,kBAAM,SAACP,GAC9BA,EAAS,CAAC1B,KFxBc,iBEyBxB6B,IAAMK,IAAN,GAAA9B,OAAaoB,EAAb,UACKW,KAAK,SAAAC,GACFV,EAAS,CACL1B,KF7BQ,WE8BRG,QAASiC,EAAIzB,SAGpB0B,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,OAsC5BG,EAAyB,SAACC,GAC5B,IAAMC,EAAS,UAAAvC,OAAasC,GAC5Bf,aAAaiB,QAAQ,YAAaD,GAClCd,IAAMC,SAASC,QAAQC,OAAvB,cAAiDW,qBCzEtCE,EAAA,SAAAC,GAAA,IAAEC,EAAFD,EAAEC,SAAUC,EAAZF,EAAYE,QAASC,EAArBH,EAAqBG,IAAKC,EAA1BJ,EAA0BI,aAAcC,EAAxCL,EAAwCK,aAAcC,EAAtDN,EAAsDM,UAAtD,OACXC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASC,MAAOR,EAAKS,UAAWP,EAAcC,UAAWA,GACrDC,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAYX,QAASA,EAASU,UAAWR,GACpCH,aCsIAa,EAAc,kBAAM,SAAClC,GAC9BA,EAAS,CAAC1B,KJrIc,6HK6BtB6D,8MACFlE,MAAQ,CACJmE,MAAM,EACNC,KAAM,GACN1E,OAAQ,MAkBZ2E,WAAa,WACTC,EAAKC,SAAS,CAACJ,MAAM,OAGzBK,YAAc,WACVF,EAAKG,MAAMR,cACXK,EAAKC,SAAS,CAACJ,MAAM,EAAOzE,OAAQ,QAGxCgF,aAAe,SAACC,GACZL,EAAKC,SAALjE,OAAAsE,EAAA,EAAAtE,CAAA,GACKqE,EAAME,OAAOC,KAAOH,EAAME,OAAOE,WAI1CC,aAAe,SAACL,GACZA,EAAMM,iBACN,IAAMC,EAAY,CACdd,KAAME,EAAKtE,MAAMoE,MAErBE,EAAKG,MAAMU,WAAWD,6FAnCAE,EAAWC,GAC7BD,EAAU7D,GAAG7B,QACb4F,KAAKf,SAAS,CACV7E,OAAQ0F,EAAU7D,GAAG7B,SAGxB0F,EAAU7D,GAAG7B,QAAW0F,EAAU7D,GAAGnC,SACtCkG,KAAKf,SAAS,CACVH,KAAM,GACND,MAAM,EACNzE,OAAQ,sCA4BX,IACEA,EAAU4F,KAAKtF,MAAfN,OADF6F,EAE4BD,KAAKb,MAA/Be,EAFFD,EAEEC,QAAcpG,EAFhBmG,EAEWhE,GAAKnC,QACrB,OACIsE,EAAAC,EAAAC,cAAC6B,EAAA,SAAD,KACI/B,EAAAC,EAAAC,cAACV,EAAD,CAAUI,IAAI,gBAAgBD,QAASiC,KAAKjB,YACxCX,EAAAC,EAAAC,cAAC8B,EAAA/B,EAAD,OAEJD,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,CAAQxB,KAAMmB,KAAKtF,MAAMmE,KACjByB,QAASN,KAAKd,YACdqB,WAAS,EACTC,SAAS,MACbpC,EAAAC,EAAAC,cAACV,EAAD,CAAUI,IAAI,QAAQD,QAASiC,KAAKd,YAAahB,aAAcgC,EAAQO,aACnErC,EAAAC,EAAAC,cAACoC,EAAArC,EAAD,OAEJD,EAAAC,EAAAC,cAACqC,EAAA,EAAD,0BACAvC,EAAAC,EAAAC,cAACsC,EAAA,EAAD,KACIxC,EAAAC,EAAAC,cAAA,QAAMuC,SAAUb,KAAKN,cACjBtB,EAAAC,EAAAC,cAACwC,EAAA,EAAD,CACItB,KAAK,OACLzE,KAAK,OACLgG,MAAM,SACNC,WAAS,EACTC,KAAK,IACLC,YAAY,6BACZC,QAAS/G,EAAO0E,KAChBsC,WAAYhH,EAAO0E,KACnBL,UAAWyB,EAAQmB,UACnB5B,MAAOO,KAAKtF,MAAMoE,KAClBwC,SAAUtB,KAAKZ,aACfmB,WAAS,IACbnC,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAQxG,KAAK,SAAS0D,UAAWyB,EAAQsB,aAAcC,QAAQ,YACvDC,MAAM,UAAUC,SAAU7H,GADlC,SAGKA,GAAYsE,EAAAC,EAAAC,cAACsD,EAAA,EAAD,CAAkBC,KAAM,GAAIpD,UAAWyB,EAAQ4B,8BA/EnEC,aAmGVC,eAJS,SAACtH,GAAD,MAAY,CAChCuB,GAAIvB,EAAMuB,KAG0B,CAAC4D,WDvFf,SAACD,GAAD,OAAe,SAACnD,GACtCA,EAAS,CAAC1B,KJ5CY,eI6CtB6B,IAAMqF,KAAN,GAAA9G,OAAcoB,EAAd,WAA2CqD,GACtC1C,KAAK,SAACC,GACHV,EAAS,CACL1B,KJ1CW,cI2CXG,QAASiC,EAAIzB,OAEjBe,EAASkC,OAEZvB,MAAM,SAAAC,GACHC,QAAQC,IAAIF,GACZZ,EAAS,CACL1B,KJzDU,aI0DVG,QAASmC,EAAI6E,SAASxG,WCyEeiD,eAAtCqD,CAAoDG,IApHpD,SAACC,GAAD,MAAY,CACvBC,KAAMD,EAAMC,KACZhB,UAAWe,EAAMf,UACjBG,aAAc,CACVc,SAAU,WACVC,MAAO,SAEXT,gBAAiB,CACbQ,SAAU,YAEd7B,YAAa,CACT6B,SAAU,WACVE,KAAM,MACNC,IAAK,QAuGsDN,CAAmBvD,mEC1HhF8D,oLACO,IACE7I,EAAiBmG,KAAKb,MAAtBtF,cACP,OACIuE,EAAAC,EAAAC,cAACqE,GAAA,EAAD,KACIvE,EAAAC,EAAAC,cAACsE,GAAA,EAAD,CAASnE,UAAU,iBACd5E,EACGuE,EAAAC,EAAAC,cAAC6B,EAAA,SAAD,KACI/B,EAAAC,EAAAC,cAACuE,GAAD,MACAzE,EAAAC,EAAAC,cAACwE,EAAA,EAAD,CAAMC,GAAG,KACL3E,EAAAC,EAAAC,cAACV,EAAD,CAAUI,IAAI,QACVI,EAAAC,EAAAC,cAAC0E,GAAA3E,EAAD,QAGRD,EAAAC,EAAAC,cAACV,EAAD,CAAUI,IAAI,iBACVI,EAAAC,EAAAC,cAAC2E,GAAA5E,EAAD,QAIRD,EAAAC,EAAAC,cAAC6B,EAAA,SAAD,KACI/B,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAQG,MAAM,UAAUwB,UAAWC,IAAMJ,GAAG,KAA5C,QACA3E,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAQG,MAAM,UAAUwB,UAAWC,IAAMJ,GAAG,UAA5C,SACA3E,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAQG,MAAM,UAAUwB,UAAWC,IAAMJ,GAAG,WAA5C,oBAtBPhB,aAuCNC,eAJS,SAACtH,GAAD,MAAY,CAChCb,cAAea,EAAMD,KAAKZ,gBAGfmI,CAAyBU,cClCzBV,eAJS,SAACtH,GAAD,MAAY,CAChCb,cAAea,EAAMD,KAAKZ,gBAGfmI,CAfG,SAAAnE,GAAA,IAAakE,EAAblE,EAAEqF,UAAsBrJ,EAAxBgE,EAAwBhE,cAAkBuJ,EAA1CpI,OAAAqI,GAAA,EAAArI,CAAA6C,EAAA,sCACdO,EAAAC,EAAAC,cAACgF,EAAA,EAADtI,OAAAuI,OAAA,GACQH,EADR,CAEII,OAAQ,SAAArE,GAAK,OAAItF,EAAgBuE,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAUP,GAAG,MAAQ3E,EAAAC,EAAAC,cAACyD,EAAc5C,0FCyBvEsE,8MACF/I,MAAQ,CACJmE,MAAM,KAEVE,WAAa,WACTC,EAAKC,SAAS,CAACJ,MAAM,OAEzBK,YAAc,WACVF,EAAKC,SAAS,CAACJ,MAAM,OAEzB6E,aAAe,WACX1E,EAAKG,MAAMuE,aAAa1E,EAAKG,MAAM5D,UACnCyD,EAAKC,SAAS,CAACJ,MAAM,6EAGhB,IACEqB,EAAWF,KAAKb,MAAhBe,QACP,OACI9B,EAAAC,EAAAC,cAAC6B,EAAA,SAAD,KACI/B,EAAAC,EAAAC,cAACV,EAAD,CAAUI,IAAI,gBAAgBD,QAASiC,KAAKjB,WAAYd,aAAciC,EAAQyD,cAC1EvF,EAAAC,EAAAC,cAACsF,GAAAvF,EAAD,CAAeqD,MAAM,eAEzBtD,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,CAAQxB,KAAMmB,KAAKtF,MAAMmE,KACjByB,QAASN,KAAKd,YACdqB,WAAS,EACTC,SAAS,MACbpC,EAAAC,EAAAC,cAACqC,EAAA,EAAD,iDACAvC,EAAAC,EAAAC,cAACuF,GAAA,EAAD,KACIzF,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAQxD,QAASiC,KAAKd,YAAawC,MAAM,WAAzC,UACAtD,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAQxD,QAASiC,KAAK0D,aAAchC,MAAM,aAA1C,oBA7BGK,aA2CZC,eAAQ,KAAM,CAAC0B,aJkCF,SAACnI,GAAD,OAAc,SAACkB,GACvCG,IAAMkH,OAAN,GAAA3I,OAAgBoB,EAAhB,YAAApB,OAA6CI,IACxC2B,KAAK,WACFT,EAAS,CACL1B,KJjGa,gBIkGbG,QAASK,MAGhB6B,MAAM,SAAAC,GACHC,QAAQC,IAAIF,QI3CT2E,CAA8BG,IAnD9B,SAACC,GAAD,MAAY,CACvBuB,aAAc,CACVrB,SAAU,WACVE,KAAM,MACNC,IAAK,SA+CgCN,CAAmBsB,+CC/D1DM,8MACFC,YAAc,kBACVhF,EAAKG,MAAM1E,KAAKT,OAASgF,EAAKG,MAAM1E,KAAKT,MAAMiK,KAAK,SAAAxI,GAAI,OAAIA,EAAKF,WAAayD,EAAKG,MAAMhF,OAAOoB,cACpG2I,WAAa,WACTlF,EAAKG,MAAM+E,WAAWlF,EAAKG,MAAMhF,OAAOoB,aAE5C4I,aAAe,WACXnF,EAAKG,MAAMgF,aAAanF,EAAKG,MAAMhF,OAAOoB,mFAuB1C,OAnBwByE,KAAKb,MAAM1E,KAA5BZ,cAQHmG,KAAKgE,cACD5F,EAAAC,EAAAC,cAACV,EAAD,CAAUI,IAAI,YAAYD,QAASiC,KAAKmE,cACpC/F,EAAAC,EAAAC,cAAC8F,GAAA/F,EAAD,CAAcqD,MAAM,aAGxBtD,EAAAC,EAAAC,cAACV,EAAD,CAAUI,IAAI,OAAOD,QAASiC,KAAKkE,YAC/B9F,EAAAC,EAAAC,cAAC+F,GAAAhG,EAAD,CAAgBqD,MAAM,aAZ9BtD,EAAAC,EAAAC,cAACwE,EAAA,EAAD,CAAMC,GAAG,UACL3E,EAAAC,EAAAC,cAACV,EAAD,CAAUI,IAAI,QACVI,EAAAC,EAAAC,cAAC+F,GAAAhG,EAAD,CAAgBqD,MAAM,qBAfjBK,aA6CnBuC,GAAoB,CACtBJ,WLUsB,SAAC3I,GAAD,OAAc,SAACkB,GACrCG,IAAMK,IAAN,GAAA9B,OAAaoB,EAAb,YAAApB,OAA0CI,EAA1C,UACK2B,KAAK,SAAAC,GACFV,EAAS,CACL1B,KJ1DW,cI2DXG,QAASiC,EAAIzB,SAGpB0B,MAAM,SAAAC,GACHC,QAAQC,IAAIF,OKlBpB8G,aLsBwB,SAAC5I,GAAD,OAAc,SAACkB,GACvCG,IAAMK,IAAN,GAAA9B,OAAaoB,EAAb,YAAApB,OAA0CI,EAA1C,YACK2B,KAAK,SAAAC,GACFV,EAAS,CACL1B,KJtEa,gBIuEbG,QAASiC,EAAIzB,SAGpB0B,MAAM,SAAAC,GACHC,QAAQC,IAAIF,QK5BT2E,eATS,SAAAtH,GAAK,MAAK,CAC9BD,KAAMC,EAAMD,OAQwB6J,GAAzBtC,CAA4C+B,aCrCrDQ,oLACO,IAAAtE,EACuBD,KAAKb,MAA1BnD,EADFiE,EACEjE,SAAUkE,EADZD,EACYC,QACjB,OACI9B,EAAAC,EAAAC,cAACkG,GAAA,EAAD,CAAMC,WAAS,GACVzI,EAAS0I,IAAI,SAACC,EAAShJ,GAAU,IACvBmD,EAA0C6F,EAA1C7F,KAAM8F,EAAoCD,EAApCC,UAAWC,EAAyBF,EAAzBE,UAAWxJ,EAAcsJ,EAAdtJ,WACnC,OACI+C,EAAAC,EAAAC,cAAC6B,EAAA,SAAD,CAAU2E,IAAKF,GACXxG,EAAAC,EAAAC,cAACkG,GAAA,EAAD,CAAMO,MAAI,EAACC,GAAI,IACX5G,EAAAC,EAAAC,cAACkG,GAAA,EAAD,CAAMC,WAAS,GACXrG,EAAAC,EAAAC,cAACkG,GAAA,EAAD,CAAMO,MAAI,EAACC,GAAI,GACX5G,EAAAC,EAAAC,cAAA,OAAK2G,IAAKJ,EAAWK,IAAI,UAAUzG,UAAWyB,EAAQiF,gBAE1D/G,EAAAC,EAAAC,cAACkG,GAAA,EAAD,CAAMO,MAAI,EAACC,GAAI,GACX5G,EAAAC,EAAAC,cAAA,OAAKG,UAAWyB,EAAQkF,aACpBhH,EAAAC,EAAAC,cAAC+G,GAAA,EAAD,CAAY5D,QAAQ,KAAKyB,UAAWC,IAAMJ,GAAE,UAAA5H,OAAYE,GAC5CqG,MAAM,WACbrG,GAEL+C,EAAAC,EAAAC,cAAC+G,GAAA,EAAD,CAAY5D,QAAQ,QAAQC,MAAM,iBAC7B4D,KAAMV,GAAWW,OAAO,yBAE7BnH,EAAAC,EAAAC,cAAA,MAAIG,UAAWyB,EAAQsF,qBACvBpH,EAAAC,EAAAC,cAAC+G,GAAA,EAAD,CAAY5D,QAAQ,SAAS3C,OAK5CnD,IAAUK,EAASpB,OAAS,GAAKwD,EAAAC,EAAAC,cAAA,MAAIG,UAAWyB,EAAQuF,8BA7B9D1D,aA0CRI,OAzDA,SAACC,GAAD,MAAY,CACvBoD,mBAAoBpD,EAAMoD,mBAC1BC,iBAAkBrD,EAAMqD,iBACxBN,aAAc,CACVO,MAAO,IACPC,OAAQ,IACRC,UAAW,QACXpF,SAAU,OACVqF,aAAc,OAElBT,YAAa,CACTU,WAAY,MA8CL3D,CAAmBoC,ICjD5BwB,8MACFrL,MAAQ,CACJoE,KAAM,GACN1E,OAAQ,MAeZgF,aAAe,SAACC,GACZL,EAAKC,SAALjE,OAAAsE,EAAA,EAAAtE,CAAA,GACKqE,EAAME,OAAOC,KAAOH,EAAME,OAAOE,WAI1CC,aAAe,SAACL,GACZA,EAAMM,iBACNX,EAAKG,MAAM6G,cAAchH,EAAKG,MAAM5D,SAAU,CAC1CuD,KAAME,EAAKtE,MAAMoE,iGArBCgB,EAAWC,GAC7BD,EAAU7D,GAAG7B,QACb4F,KAAKf,SAAS,CAAC7E,OAAQ0F,EAAU7D,GAAG7B,SAEnC0F,EAAU7D,GAAG7B,QAAW0F,EAAU7D,GAAGnC,SACtCkG,KAAKf,SAAS,CACVH,KAAM,GACN1E,OAAQ,sCAkBX,IAAA6F,EAC4BD,KAAKb,MAA/Be,EADFD,EACEC,QAASrG,EADXoG,EACWpG,cACTO,EAAU4F,KAAKtF,MAAfN,OAmBP,OAlB0BP,EACtBuE,EAAAC,EAAAC,cAACkG,GAAA,EAAD,CAAMO,MAAI,EAACC,GAAI,GAAIiB,MAAO,CAACC,UAAW,WAClC9H,EAAAC,EAAAC,cAAA,QAAMuC,SAAUb,KAAKN,cACjBtB,EAAAC,EAAAC,cAACwC,EAAA,EAAD,CACItB,KAAK,OACLzE,KAAK,OACLgG,MAAM,oBACNI,QAAS/G,EAAOuK,QAChBvD,WAAYhH,EAAOuK,QACnBlF,MAAOO,KAAKtF,MAAMoE,KAClBwC,SAAUtB,KAAKZ,aACfmB,WAAS,EACT9B,UAAWyB,EAAQmB,YAEvBjD,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAQxG,KAAK,SAAS0G,QAAQ,YAAYC,MAAM,UAAUjD,UAAWyB,EAAQiG,QAA7E,WAEJ/H,EAAAC,EAAAC,cAAA,MAAIG,UAAWyB,EAAQuF,oBAChB,YAnDG1D,aAsEXC,eANS,SAACtH,GAAD,MAAY,CAChCuB,GAAIvB,EAAMuB,GACVpC,cAAea,EAAMD,KAAKZ,gBAIU,CAACmM,cPMZ,SAACzK,EAAU6J,GAAX,OAA2B,SAAC3I,GACrDG,IAAMqF,KAAN,GAAA9G,OAAcoB,EAAd,YAAApB,OAA2CI,EAA3C,YAA+D6J,GAC1DlI,KAAK,SAAAC,GACFV,EAAS,CACL1B,KJjFa,iBIkFbG,QAASiC,EAAIzB,OAEjBe,EAASkC,OAEZvB,MAAM,SAAAC,GACHC,QAAQC,IAAIF,GACZZ,EAAS,CAAC1B,KJpGI,aIoGcG,QAASmC,EAAI6E,SAASxG,YOjB/CsG,CAA0CG,IA5E1C,SAACC,GAAD,MAAY,CACvBf,UAAWe,EAAMf,UACjB8E,OAAQ/D,EAAM+D,OACdV,iBAAkBrD,EAAMqD,mBAyE6BtD,CAAmB4D,8CClCtEK,8MACF1L,MAAQ,CACJmE,MAAM,EACNwH,QAAS,GACTC,QAAS,MAUbvH,WAAa,WACT,IAAIsH,EAAUE,OAAOC,SAASC,SADfxG,EAEgBjB,EAAKG,MAA7B9D,EAFQ4E,EAER5E,WAAYE,EAFJ0E,EAEI1E,SACb+K,EAAO,2BAAAnL,OAA8BE,EAA9B,YAAAF,OAAmDI,GAChEgL,OAAOG,QAAQC,UAAU,KAAM,KAAML,GACrCtH,EAAKC,SAAS,CAACJ,MAAM,EAAMwH,UAASC,YACpCtH,EAAKG,MAAMyH,UAAU5H,EAAKG,MAAM5D,aAGpC2D,YAAc,WACVqH,OAAOG,QAAQC,UAAU,KAAM,KAAM3H,EAAKtE,MAAM2L,SAChDrH,EAAKC,SAAS,CAACJ,MAAM,IACrBG,EAAKG,MAAMR,kGAlBXrB,QAAQC,IAAIyC,KAAKb,MAAM0H,YACnB7G,KAAKb,MAAM0H,YACX7G,KAAKjB,8CAmBJ,IAAA+H,EAKD9G,KAAKb,MAHLe,EAFC4G,EAED5G,QAFC6G,EAAAD,EAGD3M,OAASoB,EAHRwL,EAGQxL,SAAUuD,EAHlBiI,EAGkBjI,KAAM8F,EAHxBmC,EAGwBnC,UAAW/I,EAHnCkL,EAGmClL,UAAWE,EAH9CgL,EAG8ChL,aAAc8I,EAH5DkC,EAG4DlC,UAAWxJ,EAHvE0L,EAGuE1L,WAAYW,EAHnF+K,EAGmF/K,SAGlFgL,EANDF,EAID7K,GAAKnC,QAGLsE,EAAAC,EAAAC,cAAA,OAAKG,UAAWyB,EAAQ+G,YACpB7I,EAAAC,EAAAC,cAACsD,EAAA,EAAD,CAAkBC,KAAM,IAAKqF,UAAW,KAG5C9I,EAAAC,EAAAC,cAACkG,GAAA,EAAD,CAAMC,WAAS,EAAC0C,QAAS,GACrB/I,EAAAC,EAAAC,cAACkG,GAAA,EAAD,CAAMO,MAAI,EAACC,GAAI,GACX5G,EAAAC,EAAAC,cAAA,OAAK2G,IAAKJ,EAAWK,IAAI,UAAUzG,UAAWyB,EAAQkH,gBAE1DhJ,EAAAC,EAAAC,cAACkG,GAAA,EAAD,CAAMO,MAAI,EAACC,GAAI,GACX5G,EAAAC,EAAAC,cAAC+G,GAAA,EAAD,CAAYnC,UAAWC,IAAMzB,MAAM,UAAUD,QAAQ,KAAKsB,GAAE,UAAA5H,OAAYE,IAAxE,IACMA,GAEN+C,EAAAC,EAAAC,cAAA,MAAIG,UAAWyB,EAAQsF,qBACvBpH,EAAAC,EAAAC,cAAC+G,GAAA,EAAD,CAAY5D,QAAQ,QAAQC,MAAM,iBAC7B4D,KAAMV,GAAWW,OAAO,yBAE7BnH,EAAAC,EAAAC,cAAA,MAAIG,UAAWyB,EAAQsF,qBACvBpH,EAAAC,EAAAC,cAAC+G,GAAA,EAAD,CAAY5D,QAAQ,SACf3C,GAELV,EAAAC,EAAAC,cAAC+I,GAAD,CAAYlN,OAAQ6F,KAAKb,MAAMhF,SAASiE,EAAAC,EAAAC,cAAA,YAAOzC,EAAP,UACxCuC,EAAAC,EAAAC,cAACV,EAAD,CAAUI,IAAI,YACVI,EAAAC,EAAAC,cAACgJ,GAAAjJ,EAAD,CAAUqD,MAAM,aAEpBtD,EAAAC,EAAAC,cAAA,YAAOvC,EAAP,cAEJqC,EAAAC,EAAAC,cAAA,MAAIG,UAAWyB,EAAQuF,mBACvBrH,EAAAC,EAAAC,cAACiJ,GAAD,CAAahM,SAAUA,IACvB6C,EAAAC,EAAAC,cAACkJ,GAAD,CAAUxL,SAAUA,KAE5B,OACIoC,EAAAC,EAAAC,cAAC6B,EAAA,SAAD,KACI/B,EAAAC,EAAAC,cAACV,EAAD,CAAUG,QAASiC,KAAKjB,WAAYf,IAAI,gBAAgBE,aAAcgC,EAAQuH,cAC1ErJ,EAAAC,EAAAC,cAACoJ,GAAArJ,EAAD,CAAYqD,MAAM,aAEtBtD,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,CAAQxB,KAAMmB,KAAKtF,MAAMmE,KACjByB,QAASN,KAAKd,YACdqB,WAAS,EACTC,SAAS,MACbpC,EAAAC,EAAAC,cAACV,EAAD,CAAUI,IAAI,QAAQD,QAASiC,KAAKd,YAAahB,aAAcgC,EAAQO,aACnErC,EAAAC,EAAAC,cAACoC,EAAArC,EAAD,OAEJD,EAAAC,EAAAC,cAACsC,EAAA,EAAD,CAAenC,UAAWyB,EAAQyH,eAC7BX,YA/EEjF,aAoGrBuC,GAAoB,CACtBsC,URzHqB,SAACrL,GAAD,OAAc,SAACkB,GACpCA,EAAS,CAAC1B,KJ7BY,eI8BtB6B,IAAMK,IAAN,GAAA9B,OAAaoB,EAAb,YAAApB,OAA0CI,IACrC2B,KAAK,SAAAC,GACFV,EAAS,CACL1B,KJ1BU,aI2BVG,QAASiC,EAAIzB,OAEjBe,EAAS,CACL1B,KJpCe,sBIuCtBqC,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,OQ8G9BsB,eAGWqD,eAVS,SAACtH,GAAD,MAAY,CAChCP,OAAQO,EAAMgB,KAAKvB,OACnB8B,GAAIvB,EAAMuB,KAQ0BqI,GAAzBtC,CAA4CG,IAtI5C,SAACC,GAAD,MAAY,CACvBoD,mBAAoBpD,EAAMoD,mBAC1BC,iBAAkBrD,EAAMqD,iBACxB2B,aAAc,CACV1B,MAAO,IACPC,OAAQ,IACRC,UAAW,QACXpF,SAAU,OACVqF,aAAc,OAElB8B,cAAe,CACXC,QAAS,IAEbnH,YAAa,CACT6B,SAAU,WACVE,KAAM,MACNC,IAAK,MAETgF,aAAc,CACVnF,SAAU,WACVE,KAAM,OAEVyE,WAAY,CACRf,UAAW,SACX2B,UAAW,GACXC,aAAc,MA6GqC3F,CAAmBiE,2CCxHxE2B,oLAEEzC,KAAM0C,OAAOC,MADR,IAAAhI,EAQDD,KAAKb,MALLe,EAHCD,EAGDC,QAHCgI,EAAAjI,EAID9F,OAAS2E,EAJRoJ,EAIQpJ,KAAM8F,EAJdsD,EAIctD,UAAWC,EAJzBqD,EAIyBrD,UAAWxJ,EAJpC6M,EAIoC7M,WAAYE,EAJhD2M,EAIgD3M,SAAUM,EAJ1DqM,EAI0DrM,UAAWE,EAJrEmM,EAIqEnM,aAJrEoM,EAAAlI,EAKDxF,KACIZ,EANHsO,EAMGtO,cAA6ByB,EANhC6M,EAMkBpO,YAAcuB,OAG/BqI,EAAe9J,GAAiBwB,IAAeC,EACjD8C,EAAAC,EAAAC,cAAC8J,GAAD,CAAc7M,SAAUA,IACxB,KACJ,OACI6C,EAAAC,EAAAC,cAAC+J,GAAA,EAAD,CAAM5J,UAAWyB,EAAQoI,MACrBlK,EAAAC,EAAAC,cAACiK,GAAA,EAAD,CAAWC,MAAO3D,EAAWrG,MAAM,gBAAgBC,UAAWyB,EAAQsI,QACtEpK,EAAAC,EAAAC,cAACmK,GAAA,EAAD,CAAahK,UAAWyB,EAAQwI,SAC5BtK,EAAAC,EAAAC,cAAC+G,GAAA,EAAD,CAAY5D,QAAQ,KAAKC,MAAM,UAAUwB,UAAWC,IACxCJ,GAAE,UAAA5H,OAAYE,GAAcoD,UAAWyB,EAAQyI,YAAatN,GACvEsI,EACDvF,EAAAC,EAAAC,cAAC+G,GAAA,EAAD,CAAY5D,QAAQ,QAAQC,MAAM,iBAAiB4D,KAAMV,GAAWgE,WACpExK,EAAAC,EAAAC,cAAC+G,GAAA,EAAD,CAAY5D,QAAQ,SAAS3C,GAC7BV,EAAAC,EAAAC,cAAC+I,GAAD,CAAYlN,OAAQ6F,KAAKb,MAAMhF,SAC/BiE,EAAAC,EAAAC,cAAA,YAAOzC,EAAP,UACAuC,EAAAC,EAAAC,cAACV,EAAD,CAAUI,IAAI,YACVI,EAAAC,EAAAC,cAACgJ,GAAAjJ,EAAD,CAAUqD,MAAM,aAEpBtD,EAAAC,EAAAC,cAAA,YAAOvC,EAAP,aACAqC,EAAAC,EAAAC,cAACuK,GAAD,CAActN,SAAUA,EAAUF,WAAYA,EAAYwL,WAAY7G,KAAKb,MAAM0H,sBA5BhF9E,aA8CNC,eAJS,SAAAtH,GAAK,MAAK,CAC9BD,KAAMC,EAAMD,OAGDuH,CAAyBG,aA7DzB,CACXmG,KAAM,CACFhG,SAAU,WACVwG,QAAS,OACThB,aAAc,IAElBU,MAAO,CACHO,SAAU,KAEdL,QAAS,CACLd,QAAS,GACThC,UAAW,UAkDqBzD,CAAmB4F,yBC5DrDiB,eACF,SAAAA,EAAY7J,GAAO,IAAAH,EAAA,OAAAhE,OAAAiO,EAAA,EAAAjO,CAAAgF,KAAAgJ,IACfhK,EAAAhE,OAAAkO,EAAA,EAAAlO,CAAAgF,KAAAhF,OAAAmO,EAAA,EAAAnO,CAAAgO,GAAAI,KAAApJ,KAAMb,KAcVJ,WAAa,WACTC,EAAKC,SAAS,CAACJ,MAAM,IACrBG,EAAKqK,sBAAsBrK,EAAKG,MAAMpF,cAjBvBiF,EAoBnBE,YAAc,WACVF,EAAKC,SAAS,CAACJ,MAAM,KArBNG,EAwBnBI,aAAe,SAACC,GACZL,EAAKC,SAALjE,OAAAsE,EAAA,EAAAtE,CAAA,GACKqE,EAAME,OAAOC,KAAOH,EAAME,OAAOE,SA1BvBT,EA8BnBU,aAAe,WACX,IAAM4J,EAAc,CAChBC,IAAKvK,EAAKtE,MAAM6O,IAChB/C,SAAUxH,EAAKtE,MAAM8L,SACrBgD,QAASxK,EAAKtE,MAAM8O,SAExBxK,EAAKG,MAAMsK,gBAAgBH,GAC3BtK,EAAKE,eArCUF,EAwCnBqK,sBAAwB,SAACtP,GACrBiF,EAAKC,SAAS,CACVsK,IAAKxP,EAAYwP,IAAMxP,EAAYwP,IAAM,GACzCC,QAASzP,EAAYyP,QAAUzP,EAAYyP,QAAU,GACrDhD,SAAUzM,EAAYyM,SAAWzM,EAAYyM,SAAW,MA1C5DxH,EAAKtE,MAAQ,CACT6O,IAAK,GACLC,QAAS,GACThD,SAAU,GACV3H,MAAM,GANKG,mFAUC,IACTjF,EAAeiG,KAAKb,MAApBpF,YACPiG,KAAKqJ,sBAAsBtP,oCAoCtB,IACEmG,EAAWF,KAAKb,MAAhBe,QACP,OACI9B,EAAAC,EAAAC,cAAC6B,EAAA,SAAD,KACI/B,EAAAC,EAAAC,cAACV,EAAD,CAAUI,IAAI,eAAeG,UAAU,MAAMJ,QAASiC,KAAKjB,WAAYd,aAAciC,EAAQiG,QACzF/H,EAAAC,EAAAC,cAACoL,GAAArL,EAAD,CAAUqD,MAAM,aAEpBtD,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,CAAQxB,KAAMmB,KAAKtF,MAAMmE,KACjByB,QAASN,KAAKd,YACdqB,WAAS,EACTC,SAAS,MACbpC,EAAAC,EAAAC,cAACqC,EAAA,EAAD,0BACAvC,EAAAC,EAAAC,cAACsC,EAAA,EAAD,KACIxC,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAACwC,EAAA,EAAD,CACItB,KAAK,MACLzE,KAAK,OACLgG,MAAM,MACNC,WAAS,EACTC,KAAK,IACLC,YAAY,6BACZzC,UAAWyB,EAAQmB,UACnB5B,MAAOO,KAAKtF,MAAM6O,IAClBjI,SAAUtB,KAAKZ,aACfmB,WAAS,IACbnC,EAAAC,EAAAC,cAACwC,EAAA,EAAD,CACItB,KAAK,WACLzE,KAAK,OACLgG,MAAM,WACNG,YAAY,iBACZzC,UAAWyB,EAAQmB,UACnB5B,MAAOO,KAAKtF,MAAM8L,SAClBlF,SAAUtB,KAAKZ,aACfmB,WAAS,IACbnC,EAAAC,EAAAC,cAACwC,EAAA,EAAD,CACItB,KAAK,UACLzE,KAAK,OACLgG,MAAM,UACNG,YAAY,qCACZzC,UAAWyB,EAAQmB,UACnB5B,MAAOO,KAAKtF,MAAM8O,QAClBlI,SAAUtB,KAAKZ,aACfmB,WAAS,MAGrBnC,EAAAC,EAAAC,cAACuF,GAAA,EAAD,KACIzF,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAQxD,QAASiC,KAAKd,YAAawC,MAAM,WAAzC,UACAtD,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAQxD,QAASiC,KAAKN,aAAcgC,MAAM,WAA1C,kBAhGEK,aAiHXC,eATS,SAACtH,GAAD,MAAY,CAChCX,YAAaW,EAAMD,KAAKV,cAQY,CAAC0P,gBZ1EV,SAACH,GAAD,OAAiB,SAAC7M,GAC7CA,EAAS,CAAC1B,KF9Dc,iBE+DxB6B,IAAMqF,KAAN,GAAA9G,OAAcoB,EAAd,SAAyC+M,GACpCpM,KAAK,WACFT,EAASO,OAEZI,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QYoEnB2E,CAA4CG,IAvH5C,SAACC,GAAD,MAAY,CACvB+D,OAAQ,CAAC5D,MAAO,SAChBF,KAAMD,EAAMC,KACZhB,UAAWe,EAAMf,YAoHsCc,CAAmB6G,0GCjExEW,8MACFC,kBAAoB,SAACvK,GACjB,IAAMmJ,EAAQnJ,EAAME,OAAOsK,MAAM,GAC3BC,EAAW,IAAIC,SACrBD,EAASE,OAAO,QAASxB,EAAOA,EAAMhJ,MACtCR,EAAKG,MAAM8K,YAAYH,MAE3BI,kBAAoB,WACEC,SAASC,eAAe,cAChCC,WAEdC,aAAe,WACXtL,EAAKG,MAAM3C,sFAGN,IAAAyD,EAQDD,KAAKb,MANLe,EAFCD,EAEDC,QAFCiI,EAAAlI,EAGDxF,KACIZ,EAJHsO,EAIGtO,cAJH0Q,EAAApC,EAKGpO,YAAcuB,EALjBiP,EAKiBjP,OAAQsJ,EALzB2F,EAKyB3F,UAAW4F,EALpCD,EAKoCC,SAAUjB,EAL9CgB,EAK8ChB,IAAKC,EALnDe,EAKmDf,QAAShD,EAL5D+D,EAK4D/D,SA0DjE,OA/DK2B,EAMGrO,QAwDFsE,EAAAC,EAAAC,cAAA,oBArD2BzE,EAC7BuE,EAAAC,EAAAC,cAACmM,GAAA,EAAD,CAAOhM,UAAWyB,EAAQwK,OACtBtM,EAAAC,EAAAC,cAAA,OAAKG,UAAWyB,EAAQyK,SACpBvM,EAAAC,EAAAC,cAAA,OAAKG,UAAU,iBACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,gBAAgBwG,IAAKuF,EAAUtF,IAAI,YAClD9G,EAAAC,EAAAC,cAAA,SAAOvD,KAAK,OAAO6P,GAAG,aAAatJ,SAAUtB,KAAK4J,kBAAmBiB,QAAM,IAC3EzM,EAAAC,EAAAC,cAACV,EAAD,CAAUI,IAAI,uBAAuBG,UAAU,WAAWJ,QAASiC,KAAKkK,kBAAmBjM,aAAa,UACpGG,EAAAC,EAAAC,cAACoL,GAAArL,EAAD,CAAUqD,MAAM,cAGxBtD,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKG,UAAU,mBACXL,EAAAC,EAAAC,cAAC6E,GAAA,EAAD,CAASD,UAAWC,IAAMJ,GAAE,UAAA5H,OAAYG,GAAUoG,MAAM,UAAUD,QAAQ,MAA1E,IACMnG,GAEN8C,EAAAC,EAAAC,cAAA,WACCiL,GAAOnL,EAAAC,EAAAC,cAAC+G,GAAA,EAAD,CAAY5D,QAAQ,SAAS8H,GACrCnL,EAAAC,EAAAC,cAAA,WACCwM,UACG1M,EAAAC,EAAAC,cAAC6B,EAAA,SAAD,KACI/B,EAAAC,EAAAC,cAACyM,GAAA1M,EAAD,CAAYqD,MAAM,YAClBtD,EAAAC,EAAAC,cAAA,YAAOkI,GACPpI,EAAAC,EAAAC,cAAA,YAGPkL,GACGpL,EAAAC,EAAAC,cAAC6B,EAAA,SAAD,KACI/B,EAAAC,EAAAC,cAAC0M,GAAA3M,EAAD,CAAUqD,MAAM,YAChBtD,EAAAC,EAAAC,cAAA,KAAG2M,KAAMzB,EAASjK,OAAO,SAAS2L,IAAI,sBACjC1B,GAELpL,EAAAC,EAAAC,cAAA,YAGRF,EAAAC,EAAAC,cAAC6M,GAAA9M,EAAD,CAAeqD,MAAM,YAAY,KACjCtD,EAAAC,EAAAC,cAAA,sBAAcgH,KAAMV,GAAWW,OAAO,cAE1CnH,EAAAC,EAAAC,cAACV,EAAD,CAAUI,IAAI,SAASG,UAAU,MAAMJ,QAASiC,KAAKsK,cACjDlM,EAAAC,EAAAC,cAAC8M,GAAA/M,EAAD,CAAgBqD,MAAM,aAE1BtD,EAAAC,EAAAC,cAAC+M,GAAD,QAIRjN,EAAAC,EAAAC,cAACmM,GAAA,EAAD,CAAOhM,UAAWyB,EAAQwK,OACtBtM,EAAAC,EAAAC,cAAC+G,GAAA,EAAD,CAAY5D,QAAQ,QAAQ6J,MAAM,UAAlC,wCAGAlN,EAAAC,EAAAC,cAAA,OAAKG,UAAWyB,EAAQqL,SACpBnN,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAQE,QAAQ,YAAYC,MAAM,UAAUwB,UAAWC,IAAMJ,GAAG,UAAhE,SACA3E,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAQE,QAAQ,YAAYC,MAAM,YAAYwB,UAAWC,IAAMJ,GAAG,WAAlE,mBA1EEhB,aAsFhByJ,GAAmB,CAAChP,aAAYyN,YbxGX,SAACH,GAAD,OAAc,SAACrN,GACtCA,EAAS,CAAC1B,KFrDc,iBEsDxB6B,IAAMqF,KAAN,GAAA9G,OAAcoB,EAAd,eAA+CuN,GAC1C5M,KAAK,WACFT,EAASO,OAEZI,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,Qa2GnB2E,eAbS,SAACtH,GAAD,MAAY,CAChCD,KAAMC,EAAMD,OAYwB+Q,GAAzBxJ,CAA2CG,IAhJ3C,SAACC,GAAD,MAAY,CACvBsI,MAAO,CACH9C,QAAS,IAEb+C,QAAS,CACLc,mBAAoB,CAChBvF,UAAW,SACX5D,SAAU,WACVoJ,WAAY,CACRpJ,SAAU,WACVG,IAAK,MACLD,KAAM,QAGdmJ,mBAAoB,CAChBjG,MAAO,IACPC,OAAQ,IACRC,UAAW,QACXpF,SAAU,OACVqF,aAAc,OAElB+F,qBAAsB,CAClB1F,UAAW,SACX2F,cAAe,CACXC,cAAe,UAEnBC,MAAO,CAEHrK,MAAOU,EAAM4J,QAAQC,QAAQC,OAGrCC,OAAQ,CACJC,OAAQ,OACRC,OAAQ,cAEZC,eAAgB,CACZC,UAAW,CACPC,OAAQ,aAIpBjB,QAAS,CACLrF,UAAW,SACX6F,MAAO,CACHM,OAAQ,gBAoGsClK,CAAmBwH,KC9JvE8C,+LAGEzM,KAAKb,MAAMuN,8CAGN,IAAAC,EACsB3M,KAAKb,MAAMzD,KAA/BxB,EADFyS,EACEzS,QACH0S,EAFCD,EACW7S,QAIZsE,EAAAC,EAAAC,cAAA,uBAFApE,EAAQwK,IAAI,SAAAvK,GAAM,OAAIiE,EAAAC,EAAAC,cAACuO,GAAD,CAAQ/H,IAAK3K,EAAOoB,SAAUpB,OAAQA,MAGhE,OACIiE,EAAAC,EAAAC,cAACkG,GAAA,EAAD,CAAMC,WAAS,EAAC0C,QAAS,GACrB/I,EAAAC,EAAAC,cAACkG,GAAA,EAAD,CAAMO,MAAI,EAACC,GAAI,EAAG8H,GAAI,IACjBF,GAELxO,EAAAC,EAAAC,cAACkG,GAAA,EAAD,CAAMO,MAAI,EAACC,GAAI,EAAG8H,GAAI,IAClB1O,EAAAC,EAAAC,cAACyO,GAAD,eAlBDhL,aAkCJC,eAJS,SAACtH,GAAD,MAAY,CAChCgB,KAAMhB,EAAMgB,OAGwB,CAACgR,WZ5Bf,kBAAM,SAACjQ,GAC7BA,EAAS,CAAC1B,KJRc,iBISxB6B,IAAMK,IAAN,GAAA9B,OAAaoB,EAAb,aACKW,KAAK,SAAAC,GACFV,EAAS,CACL1B,KJVW,cIWXG,QAASiC,EAAIzB,SAGpB0B,MAAM,SAAAC,GACHC,QAAQC,IAAIF,GACZZ,EAAS,CACL1B,KJjBW,cIkBXG,QAAS,UYeV8G,CAAuCyK,wBCnBhDO,eACF,SAAAA,EAAY7N,GAAO,IAAAH,EAAA,OAAAhE,OAAAiO,EAAA,EAAAjO,CAAAgF,KAAAgN,IACfhO,EAAAhE,OAAAkO,EAAA,EAAAlO,CAAAgF,KAAAhF,OAAAmO,EAAA,EAAAnO,CAAAgS,GAAA5D,KAAApJ,KAAMb,KAcVO,aAAe,SAACL,GACZA,EAAMM,iBACN,IAAMsN,EAAW,CACbC,MAAOlO,EAAKtE,MAAMwS,MAClBC,SAAUnO,EAAKtE,MAAMyS,UAEzBnO,EAAKG,MAAMiO,UAAUH,EAAUjO,EAAKG,MAAMuH,UArB3B1H,EAuBnBI,aAAe,SAACC,GACZL,EAAKC,SAALjE,OAAAsE,EAAA,EAAAtE,CAAA,GACKqE,EAAME,OAAOC,KAAOH,EAAME,OAAOE,SAvBtCT,EAAKtE,MAAQ,CACTwS,MAAO,GACPC,SAAU,GACV/S,OAAQ,IALG4E,yFASOc,EAAWC,GAC7BD,EAAU7D,GAAG7B,QACb4F,KAAKf,SAAS,CAAC7E,OAAQ0F,EAAU7D,GAAG7B,0CAkBnC,IAAA6F,EAC4BD,KAAKb,MAA/Be,EADFD,EACEC,QAAcpG,EADhBmG,EACWhE,GAAKnC,QACdM,EAAU4F,KAAKtF,MAAfN,OACP,OACIgE,EAAAC,EAAAC,cAACkG,GAAA,EAAD,CAAMC,WAAS,EAAChG,UAAWyB,EAAQmC,MAC/BjE,EAAAC,EAAAC,cAACkG,GAAA,EAAD,CAAMO,MAAI,EAACC,IAAE,IACb5G,EAAAC,EAAAC,cAACkG,GAAA,EAAD,CAAMO,MAAI,EAACC,IAAE,GACT5G,EAAAC,EAAAC,cAAA,OAAKG,UAAWyB,EAAQsI,MAAOvD,IAAKoI,KAASnI,IAAI,QACjD9G,EAAAC,EAAAC,cAAA,QAAMgP,YAAU,EAACzM,SAAUb,KAAKN,cAC5BtB,EAAAC,EAAAC,cAACwC,EAAA,EAAD,CAAW8J,GAAG,QAAQpL,KAAK,QAAQzE,KAAK,QAAQgG,MAAM,QAAQtC,UAAWyB,EAAQmB,UACtED,WAAYhH,EAAO8S,MAAO/L,QAAS/G,EAAO8S,MAC1CzN,MAAOO,KAAKtF,MAAMwS,MAAO5L,SAAUtB,KAAKZ,aACxCmB,WAAS,IACpBnC,EAAAC,EAAAC,cAACwC,EAAA,EAAD,CAAW8J,GAAG,WAAWpL,KAAK,WAAWzE,KAAK,WAAWgG,MAAM,WACpDtC,UAAWyB,EAAQmB,UACnBD,WAAYhH,EAAO+S,SAAUhM,QAAS/G,EAAO+S,SAC7C1N,MAAOO,KAAKtF,MAAMyS,SAAU7L,SAAUtB,KAAKZ,aAAcmB,WAAS,IAC5EnG,EAAOmT,SACJnP,EAAAC,EAAAC,cAAC+G,GAAA,EAAD,CAAY5D,QAAQ,QAAQhD,UAAWyB,EAAQsN,aAAcpT,EAAOmT,SAExEnP,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAQxG,KAAK,SAAS0G,QAAQ,OAAOC,MAAM,UAAUjD,UAAWyB,EAAQiG,OAChE5F,WAAS,EAACoB,SAAU7H,GAD5B,QAGKA,GACGsE,EAAAC,EAAAC,cAACsD,EAAA,EAAD,CAAkBnD,UAAWyB,EAAQuN,YAG7CrP,EAAAC,EAAAC,cAAA,+CAAsCF,EAAAC,EAAAC,cAACwE,EAAA,EAAD,CAAMC,GAAG,WAAT,WAG9C3E,EAAAC,EAAAC,cAACkG,GAAA,EAAD,CAAMO,MAAI,EAACC,IAAE,YA5DTjD,aA8EduC,GAAoB,CACtB8I,UfrGqB,SAACH,EAAUvG,GAAX,OAAuB,SAACjK,GAC7CA,EAAS,CAAC1B,KFEY,eEDtB6B,IAAMqF,KAAN,GAAA9G,OAAcoB,EAAd,UAA0C0Q,GACrC/P,KAAK,SAAAC,GACFK,EAAuBL,EAAIzB,KAAK+B,OAChChB,EAASO,KACTP,EAAS,CAAC1B,KFDM,iBEEhB2L,EAAQgH,KAAK,OAEhBtQ,MAAM,SAAAC,GACHZ,EAAS,CACL1B,KFTU,aEUVG,QAASmC,EAAI6E,SAASxG,Ye4FvBsG,eATS,SAACtH,GAAD,MAAY,CAChCD,KAAMC,EAAMD,KACZwB,GAAIvB,EAAMuB,KAO0BqI,GAAzBtC,CAA4CG,aA3F5C,SAACC,GAAD,MAAY,CACvBC,KAAMD,EAAMC,KACZmG,MAAOpG,EAAMoG,MACbnH,UAAWe,EAAMf,UACjB8E,OAAQ/D,EAAM+D,OACdqH,YAAapL,EAAMoL,YACnBC,SAAUrL,EAAMqL,WAqFuCtL,CAAmB6K,KClFxEW,eACF,SAAAA,EAAYxO,GAAO,IAAAH,EAAA,OAAAhE,OAAAiO,EAAA,EAAAjO,CAAAgF,KAAA2N,IACf3O,EAAAhE,OAAAkO,EAAA,EAAAlO,CAAAgF,KAAAhF,OAAAmO,EAAA,EAAAnO,CAAA2S,GAAAvE,KAAApJ,KAAMb,KAgBVO,aAAe,SAACL,GACZA,EAAMM,iBACN,IAAMiO,EAAc,CAChBV,MAAOlO,EAAKtE,MAAMwS,MAClBC,SAAUnO,EAAKtE,MAAMyS,SACrBU,gBAAiB7O,EAAKtE,MAAMmT,gBAC5BvS,OAAQ0D,EAAKtE,MAAMY,QAEvB0D,EAAKG,MAAM2O,WAAWF,EAAa5O,EAAKG,MAAMuH,UAzB/B1H,EA2BnBI,aAAe,SAACC,GACZL,EAAKC,SAALjE,OAAAsE,EAAA,EAAAtE,CAAA,GACKqE,EAAME,OAAOC,KAAOH,EAAME,OAAOE,SA3BtCT,EAAKtE,MAAQ,CACTwS,MAAO,GACPC,SAAU,GACVU,gBAAiB,GACjBvS,OAAQ,GACRlB,OAAQ,IAPG4E,yFAWOc,EAAWC,GAC7BD,EAAU7D,GAAG7B,QACb4F,KAAKf,SAAS,CAAC7E,OAAQ0F,EAAU7D,GAAG7B,0CAoBnC,IAAA6F,EAC2BD,KAAKb,MAA9Be,EADFD,EACEC,QAAapG,EADfmG,EACWhE,GAAInC,QACbM,EAAU4F,KAAKtF,MAAfN,OACP,OACIgE,EAAAC,EAAAC,cAACkG,GAAA,EAAD,CAAMC,WAAS,EAAChG,UAAWyB,EAAQmC,MAC/BjE,EAAAC,EAAAC,cAACkG,GAAA,EAAD,CAAMO,MAAI,EAACC,IAAE,IACb5G,EAAAC,EAAAC,cAACkG,GAAA,EAAD,CAAMO,MAAI,EAACC,IAAE,GACT5G,EAAAC,EAAAC,cAAA,OAAKG,UAAWyB,EAAQsI,MAAOvD,IAAKoI,KAASnI,IAAI,QACjD9G,EAAAC,EAAAC,cAAA,QAAMgP,YAAU,EAACzM,SAAUb,KAAKN,cAC5BtB,EAAAC,EAAAC,cAACwC,EAAA,EAAD,CAAW8J,GAAG,QAAQpL,KAAK,QAAQzE,KAAK,QAAQgG,MAAM,QAAQtC,UAAWyB,EAAQmB,UACtED,WAAYhH,EAAO8S,MAAO/L,QAAS/G,EAAO8S,MAC1CzN,MAAOO,KAAKtF,MAAMwS,MAAO5L,SAAUtB,KAAKZ,aACxCmB,WAAS,IACpBnC,EAAAC,EAAAC,cAACwC,EAAA,EAAD,CAAW8J,GAAG,WAAWpL,KAAK,WAAWzE,KAAK,WAAWgG,MAAM,WACpDtC,UAAWyB,EAAQmB,UACnBD,WAAYhH,EAAO+S,SAAUhM,QAAS/G,EAAO+S,SAC7C1N,MAAOO,KAAKtF,MAAMyS,SAAU7L,SAAUtB,KAAKZ,aAAcmB,WAAS,IAC7EnC,EAAAC,EAAAC,cAACwC,EAAA,EAAD,CAAW8J,GAAG,kBAAkBpL,KAAK,kBAAkBzE,KAAK,WACjDgG,MAAM,mBACNtC,UAAWyB,EAAQmB,UACnBD,WAAYhH,EAAOyT,gBAAiB1M,QAAS/G,EAAOyT,gBACpDpO,MAAOO,KAAKtF,MAAMmT,gBAAiBvM,SAAUtB,KAAKZ,aAAcmB,WAAS,IACpFnC,EAAAC,EAAAC,cAACwC,EAAA,EAAD,CAAW8J,GAAG,SAASpL,KAAK,SAASzE,KAAK,OAAOgG,MAAM,SAC5CtC,UAAWyB,EAAQmB,UACnBD,WAAYhH,EAAOkB,OAAQ6F,QAAS/G,EAAOkB,OAC3CmE,MAAOO,KAAKtF,MAAMY,OAAQgG,SAAUtB,KAAKZ,aAAcmB,WAAS,IAC1EnG,EAAOmT,SACJnP,EAAAC,EAAAC,cAAC+G,GAAA,EAAD,CAAY5D,QAAQ,QAAQhD,UAAWyB,EAAQ6N,cAAe3T,EAAOmT,SAEzEnP,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAQxG,KAAK,SAAS0G,QAAQ,OAAOC,MAAM,UAAUjD,UAAWyB,EAAQiG,OAChE5F,WAAS,EAACoB,SAAU7H,GAD5B,SAGKA,GACGsE,EAAAC,EAAAC,cAACsD,EAAA,EAAD,CAAkBnD,UAAWyB,EAAQuN,YAG7CrP,EAAAC,EAAAC,cAAA,gDAAuCF,EAAAC,EAAAC,cAACwE,EAAA,EAAD,CAAMC,GAAG,UAAT,WAG/C3E,EAAAC,EAAAC,cAACkG,GAAA,EAAD,CAAMO,MAAI,EAACC,IAAE,YAzERjD,aA2FNC,eALS,SAACtH,GAAD,MAAY,CAChCD,KAAMC,EAAMD,KACZwB,GAAIvB,EAAMuB,KAG0B,CAAC6R,WhB9Ef,SAACF,EAAalH,GAAd,OAA0B,SAACjK,GACjDA,EAAS,CAAC1B,KFjCY,eEkCtB6B,IAAMqF,KAAN,GAAA9G,OAAcoB,EAAd,WAA2CqR,GACtC1Q,KAAK,SAAAC,GACFK,EAAuBL,EAAIzB,KAAK+B,OAChChB,EAASO,KACTP,EAAS,CAAC1B,KFpCM,iBEqChB2L,EAAQgH,KAAK,OAEhBtQ,MAAM,SAAAC,GACHZ,EAAS,CACL1B,KF5CU,aE6CVG,QAASmC,EAAI6E,SAASxG,YgBkEvBsG,CAAuCG,aApGvC,SAACC,GAAD,MAAY,CACvBC,KAAMD,EAAMC,KACZmG,MAAOpG,EAAMoG,MACbnH,UAAWe,EAAMf,UACjB8E,OAAQ/D,EAAM+D,OACdqH,YAAapL,EAAMoL,YACnBC,SAAUrL,EAAMqL,WA8FkCtL,CAAmBwL,0BCtB1DxL,OA/EA,SAACC,GAAD,MAAY,CACvBsI,MAAO,CACH9C,QAAS,IAEb+C,QAAS,CACLc,mBAAoB,CAChBvF,UAAW,SACX5D,SAAU,YAEdqJ,mBAAoB,CAChBjG,MAAO,IACPC,OAAQ,IACRC,UAAW,QACXpF,SAAU,OACVqF,aAAc,OAElB+F,qBAAsB,CAClB1F,UAAW,SACX2F,cAAe,CACXC,cAAe,UAEnBC,MAAO,CAEHrK,MAAOU,EAAM4J,QAAQC,QAAQC,OAGrCC,OAAQ,CACJC,OAAQ,OACRC,OAAQ,iBAmDLlK,CA9CO,SAAChD,GAAU,IAEzBe,EAEAf,EAFAe,QAFyB8N,EAIzB7O,EADAwL,QAAUrP,EAHe0S,EAGf1S,OAAQsJ,EAHOoJ,EAGPpJ,UAAW4F,EAHJwD,EAGIxD,SAAUjB,EAHdyE,EAGczE,IAAKC,EAHnBwE,EAGmBxE,QAAShD,EAH5BwH,EAG4BxH,SAEzD,OAAQpI,EAAAC,EAAAC,cAACmM,GAAA,EAAD,CAAOhM,UAAWyB,EAAQwK,OAC9BtM,EAAAC,EAAAC,cAAA,OAAKG,UAAWyB,EAAQyK,SACpBvM,EAAAC,EAAAC,cAAA,OAAKG,UAAU,iBACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,gBAAgBwG,IAAKuF,EAAUtF,IAAI,aAEtD9G,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKG,UAAU,mBACXL,EAAAC,EAAAC,cAAC2P,GAAA5P,EAAD,CAAS6E,UAAWC,IAAMJ,GAAE,UAAA5H,OAAYG,GAAUoG,MAAM,UAAUD,QAAQ,MAA1E,IACMnG,GAEN8C,EAAAC,EAAAC,cAAA,WACCiL,GAAOnL,EAAAC,EAAAC,cAAC+G,GAAA,EAAD,CAAY5D,QAAQ,SAAS8H,GACrCnL,EAAAC,EAAAC,cAAA,WACCwM,UACG1M,EAAAC,EAAAC,cAAC6B,EAAA,SAAD,KACI/B,EAAAC,EAAAC,cAACyM,GAAA1M,EAAD,CAAYqD,MAAM,YAClBtD,EAAAC,EAAAC,cAAA,YAAOkI,GACPpI,EAAAC,EAAAC,cAAA,YAGPkL,GACGpL,EAAAC,EAAAC,cAAC6B,EAAA,SAAD,KACI/B,EAAAC,EAAAC,cAAC0M,GAAA3M,EAAD,CAAUqD,MAAM,YAChBtD,EAAAC,EAAAC,cAAA,KAAG2M,KAAMzB,EAASjK,OAAO,SAAS2L,IAAI,sBACjC1B,GAELpL,EAAAC,EAAAC,cAAA,YAGRF,EAAAC,EAAAC,cAAC6M,GAAA9M,EAAD,CAAeqD,MAAM,YAAY,KACjCtD,EAAAC,EAAAC,cAAA,sBAAcgH,KAAMV,GAAWW,OAAO,kBCtEhD2I,8MACFxT,MAAQ,CACJiQ,QAAS,KACTwD,cAAe,yFAGC,IAAAC,EAAApO,KACV1E,EAAS0E,KAAKb,MAAMkP,MAAMC,OAAOhT,OACjCC,EAAWyE,KAAKb,MAAMkP,MAAMC,OAAO/S,SACrCA,GAAUyE,KAAKf,SAAS,CAACkP,cAAe5S,IAC5CyE,KAAKb,MAAMnC,YAAY1B,GACvBsB,IAAMK,IAAN,GAAA9B,OAAaoB,EAAb,UAAApB,OAAwCG,IACnC4B,KAAK,SAAAC,GACFiR,EAAKnP,SAAS,CAAC0L,QAASxN,EAAIzB,KAAKjB,SAEpC2C,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,sCAGzB,IAAAsP,EAEsB3M,KAAKb,MAAMzD,KAA/BxB,EAFFyS,EAEEzS,QAASJ,EAFX6S,EAEW7S,QACTqU,EAAiBnO,KAAKtF,MAAtByT,cACHI,EAAiBzU,EAajBsE,EAAAC,EAAAC,cAAA,uBAb8C,IAAnBpE,EAAQU,OAC/BwD,EAAAC,EAAAC,cAAA,sCACC6P,EAKDjU,EAAQwK,IAAI,SAAAvK,GACR,OAAIA,EAAOoB,WAAa4S,EACb/P,EAAAC,EAAAC,cAACuO,GAAD,CAAQ/H,IAAK3K,EAAOoB,SAAUpB,OAAQA,IACrCiE,EAAAC,EAAAC,cAACuO,GAAD,CAAQ/H,IAAK3K,EAAOoB,SAAUpB,OAAQA,EAAQ0M,YAAY,MAP1E3M,EAAQwK,IAAI,SAAAvK,GAAM,OAAIiE,EAAAC,EAAAC,cAACuO,GAAD,CAAQ/H,IAAK3K,EAAOoB,SAAUpB,OAAQA,MAWpE,OACIiE,EAAAC,EAAAC,cAACkG,GAAA,EAAD,CAAMC,WAAS,EAAC0C,QAAS,GACrB/I,EAAAC,EAAAC,cAACkG,GAAA,EAAD,CAAMO,MAAI,EAACC,GAAI,EAAG8H,GAAI,IACjByB,GAELnQ,EAAAC,EAAAC,cAACkG,GAAA,EAAD,CAAMO,MAAI,EAACC,GAAI,EAAG8H,GAAI,IACM,OAAvB9M,KAAKtF,MAAMiQ,QAAoBvM,EAAAC,EAAAC,cAAA,4BAC5BF,EAAAC,EAAAC,cAACkQ,GAAD,CAAe7D,QAAS3K,KAAKtF,MAAMiQ,mBA3CxC5I,aA2DJC,eAJS,SAAAtH,GAAK,MAAK,CAC9BgB,KAAMhB,EAAMgB,OAGwB,CAACsB,YhBkDd,SAAC3B,GAAD,OAAgB,SAACoB,GACxCA,EAAS,CAAC1B,KJlHc,iBImHxB6B,IAAMK,IAAN,GAAA9B,OAAaoB,EAAb,UAAApB,OAAwCE,IACnC6B,KAAK,SAAAC,GACFV,EAAS,CACL1B,KJpHW,cIqHXG,QAASiC,EAAIzB,KAAKxB,YAGzBkD,MAAM,SAAAC,GACHC,QAAQC,IAAIF,GACZZ,EAAS,CACL1B,KJ3HW,cI4HXG,QAAS,YgB/DV8G,CAAwCkM,IChDjD9L,GAAQqM,ICzBC,CACXzC,QAAS,CACLC,QAAS,CACLyC,MAAO,UACPxC,KAAM,UACNyC,KAAM,UACNC,aAAc,QAElBC,UAAW,CACPH,MAAO,UACPxC,KAAM,UACNyC,KAAM,UACNC,aAAc,SAGtBvM,KAAM,CACF6D,UAAW,UAEfsC,MAAO,CACH6D,OAAQ,sBACR7L,SAAU,IACVsO,WAAY,KAEhBzN,UAAW,CACPgL,OAAQ,uBAEZlG,OAAQ,CACJkG,OAAQ,sBACR/J,SAAU,YAEdkL,YAAa,CACT9L,MAAO,MACPqN,SAAU,SACVlH,UAAW,IAEf4F,SAAU,CACNnL,SAAU,YAEdkD,mBAAoB,CAChB4G,OAAQ,OACRC,OAAQ,GAEZ5G,iBAAkB,CACdC,MAAO,OACPsJ,aAAc,4BACdlH,aAAc,MDlBhBrK,GAAQf,aAAagB,UACvBD,KAEuB,IADFwR,IAAUxR,IACdyR,IAAaC,KAAKC,MAE/BlT,EAAMO,SAASD,MAEfN,EAAMO,SAAS,CAAC1B,KrBjCS,sBqBkCzB6B,IAAMC,SAASC,QAAQC,OAAvB,cAAiDU,GACjDvB,EAAMO,SAASO,WA2BRqS,oLArBP,OACIjR,EAAAC,EAAAC,cAACgR,EAAAjR,EAAD,CAAkB+D,MAAOA,IACrBhE,EAAAC,EAAAC,cAACiR,EAAA,EAAD,CAAUrT,MAAOA,GACbkC,EAAAC,EAAAC,cAACwE,EAAA,EAAD,CAAQ0M,SAAS,qBACbpR,EAAAC,EAAAC,cAACmR,GAAD,MACArR,EAAAC,EAAAC,cAAA,OAAKG,UAAU,aACXL,EAAAC,EAAAC,cAACgF,EAAA,EAAD,KACIlF,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAOoM,OAAK,EAACC,KAAK,IAAIzM,UAAWuJ,KACjCrO,EAAAC,EAAAC,cAACsR,GAAD,CAAWD,KAAK,SAASzM,UAAW8J,KACpC5O,EAAAC,EAAAC,cAACsR,GAAD,CAAWD,KAAK,UAAUzM,UAAWyK,KACrCvP,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAOoM,OAAK,EAACC,KAAK,iBAAiBzM,UAAWgL,KAC9C9P,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAOoM,OAAK,EAACC,KAAK,kCAAkCzM,UAAWgL,iBAb7EnM,aE5BE8N,QACW,cAA7BtJ,OAAOC,SAASsJ,UAEe,UAA7BvJ,OAAOC,SAASsJ,UAEhBvJ,OAAOC,SAASsJ,SAASzB,MACvB,2DCbN0B,IAASvM,OAAOpF,EAAAC,EAAAC,cAAC0R,GAAD,MAAS7F,SAASC,eAAe,SD4H3C,kBAAmB6F,WACrBA,UAAUC,cAAcC,MAAMjT,KAAK,SAAAkT,GACjCA,EAAaC,mCEnInBC,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.32aa8c96.chunk.js","sourcesContent":["import {SET_USER, SET_AUTHENTICATED, SET_UNAUTHENTICATED, LOADING_USER, LIKE_SCREAM, UNLIKE_SCREAM} from \"../types\";\n\nconst initialState = {\n    authenticated: false,\n    loading: false,\n    credentials: {},\n    likes: [],\n    notifications: []\n};\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case SET_AUTHENTICATED:\n            return {\n                ...state,\n                authenticated: true\n            };\n        case SET_UNAUTHENTICATED:\n            return initialState;\n        case SET_USER:\n            return {\n                authenticated: true,\n                loading: false,\n                ...action.payload\n            };\n        case LOADING_USER:\n            return {\n                ...state,\n                loading: true\n            };\n        case LIKE_SCREAM:\n            return {\n                ...state,\n                likes: [\n                    ...state.likes,\n                    {\n                        userHandle: state.credentials.handle,\n                        screamId: action.payload.screamId\n                    }\n                ]\n            };\n        case UNLIKE_SCREAM:\n            return {\n                ...state,\n                likes: state.likes.filter(like => like.screamId !== action.payload.screamId)\n            };\n        default:\n            return state;\n    }\n}\n","import {\n    SET_SCREAMS,\n    SET_SCREAM,\n    LOADING_DATA,\n    LIKE_SCREAM,\n    UNLIKE_SCREAM,\n    DELETE_SCREAM,\n    POST_SCREAM,\n    SUBMIT_COMMENT\n} from \"../types\";\n\n\nconst initialState = {\n    screams: [],\n    scream: {},\n    loading: false\n};\n\nexport default function (state = initialState, action) {\n    let index;\n    switch (action.type) {\n        case LOADING_DATA:\n            return {\n                ...state,\n                loading: true\n            };\n        case SET_SCREAMS:\n            return {\n                ...state,\n                screams: action.payload,\n                loading: false\n            };\n        case SET_SCREAM:\n            return {\n                ...state,\n                scream: action.payload\n            };\n        case LIKE_SCREAM:\n        case UNLIKE_SCREAM:\n            index = state.screams.findIndex((scream) => scream.screamId === action.payload.screamId);\n            state.screams[index] = action.payload;\n            if (state.scream.screamId === action.payload.screamId) {\n                state.scream = {\n                    ...state.scream,\n                    likeCount: action.payload.likeCount\n                }\n            }\n            return {\n                ...state,\n            };\n        case DELETE_SCREAM:\n            index = state.screams.findIndex((scream) => scream.screamId === action.payload);\n            state.screams.splice(index, 1);\n            return {\n                ...state\n            };\n        case POST_SCREAM:\n            return {\n                ...state,\n                screams: [\n                    action.payload,\n                    ...state.screams\n                ]\n            };\n        case SUBMIT_COMMENT:\n            index = state.screams.findIndex((scream) => scream.screamId === action.payload.screamId);\n            state.screams[index] = {\n                ...state.screams[index],\n                commentCount: state.screams[index].commentCount + 1\n            };\n            return {\n                ...state,\n                scream: {\n                    ...state.scream,\n                    commentCount: state.scream.commentCount + 1,\n                    comments: [action.payload, ...state.scream.comments]\n                }\n            };\n        default:\n            return state;\n    }\n}\n","import {SET_ERRORS, CLEAR_ERRORS, LOADING_UI, STOP_LOADING_UI} from \"../types\";\n\nconst initialState = {\n    loading: false,\n    errors: null\n};\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case SET_ERRORS:\n            return {\n                ...state,\n                loading: false,\n                errors: action.payload\n            };\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                loading: false,\n                errors: null\n            };\n        case LOADING_UI:\n            return {\n                ...state,\n                loading: true\n            };\n        case STOP_LOADING_UI:\n            return {\n                ...state,\n                loading: false\n            };\n        default:\n            return state;\n    }\n}\n","import {createStore, combineReducers, applyMiddleware, compose} from 'redux';\nimport thunk from 'redux-thunk';\n\nimport userReducer from './reducers/userReducer';\nimport dataReducer from './reducers/dataReducer';\nimport uiReducer from './reducers/uiReducer';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst reducers = combineReducers({\n    user: userReducer,\n    data: dataReducer,\n    UI: uiReducer\n});\n\n// local\n// const store = createStore(reducers, initialState, compose(applyMiddleware(...middleware),\n//     window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()));\n\n// release\nconst store = createStore(reducers, initialState, compose(applyMiddleware(...middleware)));\n\nexport default store;\n","// User reducer types\nexport const SET_AUTHENTICATED = 'SET_AUTHENTICATED';\nexport const SET_UNAUTHENTICATED = 'SET_UNAUTHENTICATED';\nexport const SET_USER = 'SET_USER';\nexport const LOADING_USER = 'LOADING_USER';\n// UI reducer types\nexport const SET_ERRORS = 'SET_ERRORS';\nexport const LOADING_UI = 'LOADING_UI';\nexport const STOP_LOADING_UI = 'STOP_LOADING_UI';\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';\nexport const LOADING_DATA = 'LOADING_DATA';\n// Data reducer types\nexport const SET_SCREAMS = 'SET_SCREAMS';\nexport const POST_SCREAM = 'POST_SCREAM';\nexport const SET_SCREAM = 'SET_SCREAM';\nexport const LIKE_SCREAM = 'LIKE_SCREAM';\nexport const UNLIKE_SCREAM = 'UNLIKE_SCREAM';\nexport const DELETE_SCREAM = 'DELETE_SCREAM';\nexport const SUBMIT_COMMENT= 'SUBMIT_COMMENT';\n","export const FIREBASE_CORE_HOST = 'https://us-east1-xhk1995.cloudfunctions.net/api';\n","import {SET_USER, SET_ERRORS, CLEAR_ERRORS, LOADING_UI, SET_UNAUTHENTICATED, LOADING_USER} from \"../types\";\nimport axios from \"axios\";\nimport {FIREBASE_CORE_HOST} from \"../../constants/Constants\";\n\nexport const loginUser = (userData, history) => (dispatch) => {\n    dispatch({type: LOADING_UI});\n    axios.post(`${FIREBASE_CORE_HOST}/login`, userData)\n        .then(res => {\n            setAuthorizationHeader(res.data.token);\n            dispatch(getUserData());\n            dispatch({type: CLEAR_ERRORS});\n            history.push('/');\n        })\n        .catch(err => {\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data\n            });\n        })\n};\n\nexport const logoutUser = () => (dispatch) => {\n    localStorage.removeItem('FBIdToken');\n    delete axios.defaults.headers.common['Authorization'];\n    dispatch({type: SET_UNAUTHENTICATED});\n};\n\nexport const getUserData = () => (dispatch) => {\n    dispatch({type: LOADING_USER});\n    axios.get(`${FIREBASE_CORE_HOST}/user`)\n        .then(res => {\n            dispatch({\n                type: SET_USER,\n                payload: res.data\n            })\n        })\n        .catch(err => console.log(err));\n};\n\nexport const signupUser = (newUserData, history) => (dispatch) => {\n    dispatch({type: LOADING_UI});\n    axios.post(`${FIREBASE_CORE_HOST}/signup`, newUserData)\n        .then(res => {\n            setAuthorizationHeader(res.data.token);\n            dispatch(getUserData());\n            dispatch({type: CLEAR_ERRORS});\n            history.push('/');\n        })\n        .catch(err => {\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data\n            });\n        })\n};\n// TODO: 更换头像的同时更新scream头像\nexport const uploadImage = (formData) => (dispatch) => {\n    dispatch({type: LOADING_USER});\n    axios.post(`${FIREBASE_CORE_HOST}/user/image`, formData)\n        .then(() => {\n            dispatch(getUserData());\n        })\n        .catch(err => console.log(err));\n};\n\nexport const editUserDetails = (userDetails) => (dispatch) => {\n    dispatch({type: LOADING_USER});\n    axios.post(`${FIREBASE_CORE_HOST}/user`, userDetails)\n        .then(() => {\n            dispatch(getUserData());\n        })\n        .catch(err => console.log(err));\n};\n\nconst setAuthorizationHeader = (token) => {\n    const FBIdToken = `Bearer ${token}`;\n    localStorage.setItem('FBIdToken', FBIdToken);\n    axios.defaults.headers.common['Authorization'] = FBIdToken;\n};\n","import React from 'react';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\n\nexport default ({children, onClick, tip, btnClassName, tipClassName, placement}) => (\n    <Tooltip title={tip} className={tipClassName} placement={placement}>\n        <IconButton onClick={onClick} className={btnClassName}>\n            {children}\n        </IconButton>\n    </Tooltip>\n);\n\n","import {\n    SET_SCREAMS,\n    SET_SCREAM,\n    POST_SCREAM,\n    LOADING_DATA,\n    LIKE_SCREAM,\n    UNLIKE_SCREAM,\n    DELETE_SCREAM,\n    LOADING_UI,\n    STOP_LOADING_UI,\n    SET_ERRORS,\n    CLEAR_ERRORS,\n    SUBMIT_COMMENT\n} from \"../types\";\nimport axios from \"axios\";\nimport {FIREBASE_CORE_HOST} from \"../../constants/Constants\";\n\nexport const getScreams = () => (dispatch) => {\n    dispatch({type: LOADING_DATA});\n    axios.get(`${FIREBASE_CORE_HOST}/screams`)\n        .then(res => {\n            dispatch({\n                type: SET_SCREAMS,\n                payload: res.data\n            })\n        })\n        .catch(err => {\n            console.log(err);\n            dispatch({\n                type: SET_SCREAMS,\n                payload: []\n            });\n        })\n};\n\nexport const getScream = (screamId) => (dispatch) => {\n    dispatch({type: LOADING_UI});\n    axios.get(`${FIREBASE_CORE_HOST}/scream/${screamId}`)\n        .then(res => {\n            dispatch({\n                type: SET_SCREAM,\n                payload: res.data\n            });\n            dispatch({\n                type: STOP_LOADING_UI\n            })\n        })\n        .catch(err => console.log(err));\n};\n\nexport const postScream = (newScream) => (dispatch) => {\n    dispatch({type: LOADING_UI});\n    axios.post(`${FIREBASE_CORE_HOST}/scream`, newScream)\n        .then((res) => {\n            dispatch({\n                type: POST_SCREAM,\n                payload: res.data\n            });\n            dispatch(clearErrors());\n        })\n        .catch(err => {\n            console.log(err);\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data\n            })\n        })\n};\n\nexport const likeScream = (screamId) => (dispatch) => {\n    axios.get(`${FIREBASE_CORE_HOST}/scream/${screamId}/like`)\n        .then(res => {\n            dispatch({\n                type: LIKE_SCREAM,\n                payload: res.data\n            })\n        })\n        .catch(err => {\n            console.log(err);\n        })\n};\n\nexport const unlikeScream = (screamId) => (dispatch) => {\n    axios.get(`${FIREBASE_CORE_HOST}/scream/${screamId}/unlike`)\n        .then(res => {\n            dispatch({\n                type: UNLIKE_SCREAM,\n                payload: res.data\n            })\n        })\n        .catch(err => {\n            console.log(err);\n        })\n};\n\nexport const submitComment = (screamId, commentData) => (dispatch) => {\n    axios.post(`${FIREBASE_CORE_HOST}/scream/${screamId}/comment`, commentData)\n        .then(res => {\n            dispatch({\n                type: SUBMIT_COMMENT,\n                payload: res.data\n            });\n            dispatch(clearErrors());\n        })\n        .catch(err => {\n            console.log(err);\n            dispatch({type: SET_ERRORS, payload: err.response.data});\n        })\n};\n\nexport const deleteScream = (screamId) => (dispatch) => {\n    axios.delete(`${FIREBASE_CORE_HOST}/scream/${screamId}`)\n        .then(() => {\n            dispatch({\n                type: DELETE_SCREAM,\n                payload: screamId\n            })\n        })\n        .catch(err => {\n            console.log(err);\n        })\n};\n\nexport const getUserData = (userHandle) => (dispatch) => {\n    dispatch({type: LOADING_DATA});\n    axios.get(`${FIREBASE_CORE_HOST}/user/${userHandle}`)\n        .then(res => {\n            dispatch({\n                type: SET_SCREAMS,\n                payload: res.data.screams\n            });\n        })\n        .catch(err => {\n            console.log(err);\n            dispatch({\n                type: SET_SCREAMS,\n                payload: null\n            })\n        })\n}\n\nexport const clearErrors = () => (dispatch) => {\n    dispatch({type: CLEAR_ERRORS})\n};\n","import React, {Component, Fragment} from 'react';\nimport PropTypes from 'prop-types';\nimport MyButton from '../../util/MyButton';\n\n// Redux\nimport {connect} from 'react-redux';\nimport {postScream, clearErrors} from \"../../redux/actions/dataActions\";\n\n// MUI stuff\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n// Icons\nimport AddIcon from '@material-ui/icons/Add';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst styles = (theme) => ({\n    form: theme.form,\n    textField: theme.textField,\n    submitButton: {\n        position: 'relative',\n        float: 'right',\n    },\n    progressSpinner: {\n        position: 'absolute'\n    },\n    closeButton: {\n        position: 'absolute',\n        left: '90%',\n        top: '4%'\n    }\n});\n\nclass PostScream extends Component {\n    state = {\n        open: false,\n        body: '',\n        errors: {}\n    };\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        if (nextProps.UI.errors) {\n            this.setState({\n                errors: nextProps.UI.errors\n            })\n        }\n        if (!nextProps.UI.errors && !nextProps.UI.loading) {\n            this.setState({\n                body: '',\n                open: false,\n                errors: {}\n            });\n        }\n    }\n\n    handleOpen = () => {\n        this.setState({open: true});\n    };\n\n    handleClose = () => {\n        this.props.clearErrors();\n        this.setState({open: false, errors: {}});\n    };\n\n    handleChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    };\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        const newScream = {\n            body: this.state.body,\n        };\n        this.props.postScream(newScream);\n    };\n\n    render() {\n        const {errors} = this.state;\n        const {classes, UI: {loading}} = this.props;\n        return (\n            <Fragment>\n                <MyButton tip='Post a Scream' onClick={this.handleOpen}>\n                    <AddIcon/>\n                </MyButton>\n                <Dialog open={this.state.open}\n                        onClose={this.handleClose}\n                        fullWidth\n                        maxWidth='sm'>\n                    <MyButton tip='Close' onClick={this.handleClose} tipClassName={classes.closeButton}>\n                        <CloseIcon/>\n                    </MyButton>\n                    <DialogTitle>Post a new scream</DialogTitle>\n                    <DialogContent>\n                        <form onSubmit={this.handleSubmit}>\n                            <TextField\n                                name='body'\n                                type='text'\n                                label='Scream'\n                                multiline\n                                rows='3'\n                                placeholder='Scream at your fellow apes'\n                                error={!!errors.body}\n                                helperText={errors.body}\n                                className={classes.textField}\n                                value={this.state.body}\n                                onChange={this.handleChange}\n                                fullWidth/>\n                            <Button type='submit' className={classes.submitButton} variant='contained'\n                                    color='primary' disabled={loading}>\n                                Submit\n                                {loading && (<CircularProgress size={30} className={classes.progressSpinner}/>)}\n                            </Button>\n                        </form>\n                    </DialogContent>\n                </Dialog>\n            </Fragment>\n        );\n    }\n}\n\nPostScream.propTypes = {\n    postScream: PropTypes.func.isRequired,\n    clearErrors: PropTypes.func.isRequired,\n    UI: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n    UI: state.UI\n});\n\nexport default connect(mapStateToProps, {postScream, clearErrors})(withStyles(styles)(PostScream));\n","import React, {Component, Fragment} from 'react';\nimport {Link} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport MyButton from '../../util/MyButton';\nimport PostScream from '../scream/PostScream';\n// MUI stuff\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\n\n// Icons\nimport HomeIcon from '@material-ui/icons/Home';\nimport Notifications from '@material-ui/icons/Notifications';\n\nclass Navbar extends Component {\n    render() {\n        const {authenticated} = this.props;\n        return (\n            <AppBar>\n                <Toolbar className='nav-container'>\n                    {authenticated ? (\n                        <Fragment>\n                            <PostScream />\n                            <Link to='/'>\n                                <MyButton tip='Home'>\n                                    <HomeIcon/>\n                                </MyButton>\n                            </Link>\n                            <MyButton tip='Notifications'>\n                                <Notifications/>\n                            </MyButton>\n                        </Fragment>\n                    ) : (\n                        <Fragment>\n                            <Button color='inherit' component={Link} to='/'>Home</Button>\n                            <Button color='inherit' component={Link} to='/login'>Login</Button>\n                            <Button color='inherit' component={Link} to='/signup'>Signup</Button>\n                        </Fragment>\n                    )}\n                </Toolbar>\n            </AppBar>\n        );\n    }\n}\n\nNavbar.propTypes = {\n    authenticated: PropTypes.bool.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n    authenticated: state.user.authenticated\n});\n\nexport default connect(mapStateToProps)(Navbar);\n","import React from 'react';\nimport {Route, Redirect} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst AuthRoute = ({component: Component, authenticated, ...rest}) => (\n    <Route\n        {...rest}\n        render={props => authenticated ? <Redirect to='/'/> : <Component {...props}/>}\n    />\n);\n\nAuthRoute.propTypes = {\n    user: PropTypes.object\n};\n\nconst mapStateToProps = (state) => ({\n    authenticated: state.user.authenticated\n});\n\nexport default connect(mapStateToProps)(AuthRoute);\n","import React, {Component, Fragment} from 'react';\nimport {Link} from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport MyButton from \"../../util/MyButton\";\n\n// Redux\nimport {connect} from \"react-redux\";\nimport {deleteScream} from \"../../redux/actions/dataActions\";\n\n// dayjs\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime'\n\n// MUI stuff\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\n// MUI Icon\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\n\nconst styles = (theme) => ({\n    deleteButton: {\n        position: 'absolute',\n        left: '90%',\n        top: '10%'\n    }\n});\n\nclass DeleteScream extends Component {\n    state = {\n        open: false\n    };\n    handleOpen = () => {\n        this.setState({open: true});\n    };\n    handleClose = () => {\n        this.setState({open: false});\n    };\n    deleteScream = () => {\n        this.props.deleteScream(this.props.screamId);\n        this.setState({open: false});\n    };\n\n    render() {\n        const {classes} = this.props;\n        return (\n            <Fragment>\n                <MyButton tip='Delete scream' onClick={this.handleOpen} btnClassName={classes.deleteButton}>\n                    <DeleteOutline color='secondary'/>\n                </MyButton>\n                <Dialog open={this.state.open}\n                        onClose={this.handleClose}\n                        fullWidth\n                        maxWidth='sm'>\n                    <DialogTitle>Are you sure want to delete this scream?</DialogTitle>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color='primary'>Cancel</Button>\n                        <Button onClick={this.deleteScream} color='secondary'>Delete</Button>\n                    </DialogActions>\n                </Dialog>\n            </Fragment>\n        );\n    }\n}\n\nDeleteScream.propTypes = {\n    classes: PropTypes.object.isRequired,\n    deleteScream: PropTypes.func.isRequired,\n    screamId: PropTypes.string.isRequired\n};\n\nexport default connect(null, {deleteScream})(withStyles(styles)(DeleteScream));\n","import React, {Component} from 'react';\nimport MyButton from \"../../util/MyButton\";\nimport {Link} from \"react-router-dom\";\nimport PropTypes from 'prop-types';\n\n// Redux\nimport {connect} from \"react-redux\";\nimport {likeScream, unlikeScream} from \"../../redux/actions/dataActions\";\n\n// MUI Icon\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\n\nclass LikeButton extends Component {\n    likedScream = () =>\n        this.props.user.likes && this.props.user.likes.find(like => like.screamId === this.props.scream.screamId);\n    likeScream = () => {\n        this.props.likeScream(this.props.scream.screamId);\n    };\n    unlikeScream = () => {\n        this.props.unlikeScream(this.props.scream.screamId);\n    };\n\n    render() {\n        const {authenticated} = this.props.user;\n        const likeButton = !authenticated ? (\n            <Link to='/login'>\n                <MyButton tip='like'>\n                    <FavoriteBorder color='primary'/>\n                </MyButton>\n            </Link>\n        ) : (\n            this.likedScream() ? (\n                <MyButton tip='Undo like' onClick={this.unlikeScream}>\n                    <FavoriteIcon color='primary'/>\n                </MyButton>\n            ) : (\n                <MyButton tip='like' onClick={this.likeScream}>\n                    <FavoriteBorder color='primary'/>\n                </MyButton>\n            )\n\n        );\n        return likeButton;\n    }\n}\n\nLikeButton.propTypes = {\n    likeScream: PropTypes.func.isRequired,\n    unlikeScream: PropTypes.func.isRequired,\n    user: PropTypes.object.isRequired,\n    scream: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n    user: state.user\n});\n\nconst mapActionsToProps = {\n    likeScream,\n    unlikeScream\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(LikeButton);\n","import React, {Component, Fragment} from 'react';\nimport PropTypes from 'prop-types';\nimport {Link} from 'react-router-dom';\nimport dayjs from 'dayjs';\n\n// MUI stuff\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\n\nconst styles = (theme) => ({\n    invisibleSeparator: theme.invisibleSeparator,\n    visibleSeparator: theme.visibleSeparator,\n    commentImage: {\n        width: 100,\n        height: 100,\n        objectFit: 'cover',\n        maxWidth: '100%',\n        borderRadius: '50%',\n    },\n    commentData: {\n        marginLeft: 20\n    }\n});\n\nclass Comments extends Component {\n    render() {\n        const {comments, classes} = this.props;\n        return (\n            <Grid container>\n                {comments.map((comment, index) => {\n                    const {body, createdAt, userImage, userHandle} = comment;\n                    return (\n                        <Fragment key={createdAt}>\n                            <Grid item sm={12}>\n                                <Grid container>\n                                    <Grid item sm={2}>\n                                        <img src={userImage} alt='comment' className={classes.commentImage}/>\n                                    </Grid>\n                                    <Grid item sm={9}>\n                                        <div className={classes.commentData}>\n                                            <Typography variant='h5' component={Link} to={`/users/${userHandle}`}\n                                                        color='primary'>\n                                                {userHandle}\n                                            </Typography>\n                                            <Typography variant='body2' color='textSecondary'>\n                                                {dayjs(createdAt).format('h:mm a, MMMM DD YYYY')}\n                                            </Typography>\n                                            <hr className={classes.invisibleSeparator}/>\n                                            <Typography variant='body1'>{body}</Typography>\n                                        </div>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            {index !== comments.length - 1 && <hr className={classes.visibleSeparator}/>}\n                        </Fragment>\n                    )\n                })}\n            </Grid>\n        );\n    }\n}\n\nComments.propTypes = {\n    comments: PropTypes.array.isRequired\n};\n\nexport default withStyles(styles)(Comments);\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\n// Redux\nimport {connect} from 'react-redux';\nimport {submitComment} from \"../../redux/actions/dataActions\";\n\n// MUI stuff\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\n\nconst styles = (theme) => ({\n    textField: theme.textField,\n    button: theme.button,\n    visibleSeparator: theme.visibleSeparator\n});\n\nclass CommentForm extends Component {\n    state = {\n        body: '',\n        errors: {}\n    };\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        if (nextProps.UI.errors) {\n            this.setState({errors: nextProps.UI.errors});\n        }\n        if (!nextProps.UI.errors && !nextProps.UI.loading) {\n            this.setState({\n                body: '',\n                errors: {}\n            });\n        }\n    }\n\n    handleChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    };\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        this.props.submitComment(this.props.screamId, {\n            body: this.state.body\n        });\n    };\n\n    render() {\n        const {classes, authenticated} = this.props;\n        const {errors} = this.state;\n        const commentFormMarkup = authenticated ? (\n            <Grid item sm={12} style={{textAlign: 'center'}}>\n                <form onSubmit={this.handleSubmit}>\n                    <TextField\n                        name='body'\n                        type='text'\n                        label='Comment on scream'\n                        error={!!errors.comment}\n                        helperText={errors.comment}\n                        value={this.state.body}\n                        onChange={this.handleChange}\n                        fullWidth\n                        className={classes.textField}\n                    />\n                    <Button type='submit' variant='contained' color='primary' className={classes.button}>Submit</Button>\n                </form>\n                <hr className={classes.visibleSeparator}/>\n            </Grid>) : null;\n        return commentFormMarkup;\n    }\n}\n\nCommentForm.propTypes = {\n    UI: PropTypes.object.isRequired,\n    submitComment: PropTypes.func.isRequired,\n    classes: PropTypes.object.isRequired,\n    authenticated: PropTypes.bool.isRequired,\n    screamId: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n    UI: state.UI,\n    authenticated: state.user.authenticated\n});\n\n\nexport default connect(mapStateToProps, {submitComment})(withStyles(styles)(CommentForm));\n","import React, {Component, Fragment} from 'react';\nimport PropTypes from 'prop-types';\nimport MyButton from '../../util/MyButton';\nimport dayjs from 'dayjs';\nimport {Link} from 'react-router-dom';\nimport LikeButton from \"./LikeButton\";\nimport Comments from './Comments';\nimport CommentForm from './CommentForm';\n\n// Redux\nimport {connect} from 'react-redux';\nimport {getScream, clearErrors} from \"../../redux/actions/dataActions\";\n\n// MUI stuff\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\n// Icons\nimport CloseIcon from '@material-ui/icons/Close';\nimport UnfoldMore from '@material-ui/icons/UnfoldMore';\nimport ChatIcon from '@material-ui/icons/Chat';\n\nconst styles = (theme) => ({\n    invisibleSeparator: theme.invisibleSeparator,\n    visibleSeparator: theme.visibleSeparator,\n    profileImage: {\n        width: 200,\n        height: 200,\n        objectFit: 'cover',\n        maxWidth: '100%',\n        borderRadius: '50%',\n    },\n    dialogContent: {\n        padding: 20\n    },\n    closeButton: {\n        position: 'absolute',\n        left: '90%',\n        top: '4%'\n    },\n    expandButton: {\n        position: 'absolute',\n        left: '90%'\n    },\n    spinnerDiv: {\n        textAlign: 'center',\n        marginTop: 50,\n        marginBottom: 50\n    }\n});\n\nclass ScreamDialog extends Component {\n    state = {\n        open: false,\n        oldPath: '',\n        newPath: '',\n    };\n\n    componentDidMount() {\n        console.log(this.props.openDialog);\n        if (this.props.openDialog) {\n            this.handleOpen();\n        }\n    }\n\n    handleOpen = () => {\n        let oldPath = window.location.pathname;\n        const {userHandle, screamId} = this.props;\n        const newPath = `/socialape-client/users/${userHandle}/scream/${screamId}`;\n        window.history.pushState(null, null, newPath);\n        this.setState({open: true, oldPath, newPath});\n        this.props.getScream(this.props.screamId);\n    };\n\n    handleClose = () => {\n        window.history.pushState(null, null, this.state.oldPath);\n        this.setState({open: false});\n        this.props.clearErrors();\n    };\n\n    render() {\n        const {\n            classes,\n            scream: {screamId, body, createdAt, likeCount, commentCount, userImage, userHandle, comments},\n            UI: {loading}\n        } = this.props;\n        const dialogMarkup = loading ? (\n            <div className={classes.spinnerDiv}>\n                <CircularProgress size={200} thickness={2}/>\n            </div>\n        ) : (\n            <Grid container spacing={2}>\n                <Grid item sm={5}>\n                    <img src={userImage} alt='Profile' className={classes.profileImage}/>\n                </Grid>\n                <Grid item sm={7}>\n                    <Typography component={Link} color='primary' variant='h5' to={`/users/${userHandle}`}>\n                        @{userHandle}\n                    </Typography>\n                    <hr className={classes.invisibleSeparator}/>\n                    <Typography variant='body2' color='textSecondary'>\n                        {dayjs(createdAt).format('h:mm a, MMMM DD YYYY')}\n                    </Typography>\n                    <hr className={classes.invisibleSeparator}/>\n                    <Typography variant='body1'>\n                        {body}\n                    </Typography>\n                    <LikeButton scream={this.props.scream}/><span>{likeCount} Likes</span>\n                    <MyButton tip='comments'>\n                        <ChatIcon color='primary'/>\n                    </MyButton>\n                    <span>{commentCount} Comments</span>\n                </Grid>\n                <hr className={classes.visibleSeparator}/>\n                <CommentForm screamId={screamId}/>\n                <Comments comments={comments}/>\n            </Grid>);\n        return (\n            <Fragment>\n                <MyButton onClick={this.handleOpen} tip='Expand scream' tipClassName={classes.expandButton}>\n                    <UnfoldMore color='primary'/>\n                </MyButton>\n                <Dialog open={this.state.open}\n                        onClose={this.handleClose}\n                        fullWidth\n                        maxWidth='sm'>\n                    <MyButton tip='Close' onClick={this.handleClose} tipClassName={classes.closeButton}>\n                        <CloseIcon/>\n                    </MyButton>\n                    <DialogContent className={classes.dialogContent}>\n                        {dialogMarkup}\n                    </DialogContent>\n                </Dialog>\n            </Fragment>\n        );\n    }\n}\n\nScreamDialog.propTypes = {\n    getScream: PropTypes.func.isRequired,\n    screamId: PropTypes.string.isRequired,\n    userHandle: PropTypes.string.isRequired,\n    scream: PropTypes.object.isRequired,\n    UI: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n    scream: state.data.scream,\n    UI: state.UI\n});\n\nconst mapActionsToProps = {\n    getScream,\n    clearErrors\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(ScreamDialog));\n","import React, {Component} from 'react';\nimport {Link} from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport MyButton from \"../../util/MyButton\";\nimport DeleteScream from './DeleteScream';\nimport ScreamDialog from './ScreamDialog';\nimport LikeButton from \"./LikeButton\";\n\n// Redux\nimport {connect} from \"react-redux\";\n\n// dayjs\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime'\n\n// MUI stuff\nimport {withStyles} from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from \"@material-ui/core/Typography\";\n\n// MUI Icon\nimport ChatIcon from '@material-ui/icons/Chat';\n\nconst styles = {\n    card: {\n        position: 'relative',\n        display: 'flex',\n        marginBottom: 20\n    },\n    image: {\n        minWidth: 200\n    },\n    content: {\n        padding: 25,\n        objectFit: 'cover'\n    }\n};\n\nclass Scream extends Component {\n    render() {\n        dayjs.extend(relativeTime);\n        const {\n            classes,\n            scream: {body, createdAt, userImage, userHandle, screamId, likeCount, commentCount},\n            user: {\n                authenticated, credentials: {handle}\n            }\n        } = this.props;\n        const deleteButton = authenticated && userHandle === handle ? (\n            <DeleteScream screamId={screamId}/>\n        ) : null;\n        return (\n            <Card className={classes.card}>\n                <CardMedia image={userImage} title='Profile Image' className={classes.image}/>\n                <CardContent className={classes.content}>\n                    <Typography variant='h5' color='primary' component={Link}\n                                to={`/users/${userHandle}`} className={classes.typography}>{userHandle}</Typography>\n                    {deleteButton}\n                    <Typography variant='body2' color='textSecondary'>{dayjs(createdAt).fromNow()}</Typography>\n                    <Typography variant='body1'>{body}</Typography>\n                    <LikeButton scream={this.props.scream}/>\n                    <span>{likeCount} Likes</span>\n                    <MyButton tip='comments'>\n                        <ChatIcon color='primary'/>\n                    </MyButton>\n                    <span>{commentCount} Comments</span>\n                    <ScreamDialog screamId={screamId} userHandle={userHandle} openDialog={this.props.openDialog}/>\n                </CardContent>\n            </Card>\n        );\n    }\n}\n\nScream.propTypes = {\n    user: PropTypes.object.isRequired,\n    scream: PropTypes.object.isRequired,\n    classes: PropTypes.object.isRequired,\n    openDialog: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n    user: state.user\n});\n\nexport default connect(mapStateToProps)(withStyles(styles)(Scream));\n","import React, {Component, Fragment} from 'react';\nimport PropTypes from 'prop-types';\nimport MyButton from '../../util/MyButton';\n\n// Redux\nimport {connect} from 'react-redux';\nimport {editUserDetails} from \"../../redux/actions/userActions\";\n\n// MUI stuff\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\n// Icons\nimport EditIcon from '@material-ui/icons/Edit';\n\nconst styles = (theme) => ({\n    button: {float: 'right'},\n    form: theme.form,\n    textField: theme.textField,\n});\n\nclass EditDetails extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            bio: '',\n            website: '',\n            location: '',\n            open: false\n        }\n    }\n\n    componentDidMount() {\n        const {credentials} = this.props;\n        this.mapUserDetailsToState(credentials);\n    }\n\n    handleOpen = () => {\n        this.setState({open: true});\n        this.mapUserDetailsToState(this.props.credentials);\n    };\n\n    handleClose = () => {\n        this.setState({open: false});\n    };\n\n    handleChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    };\n\n    handleSubmit = () => {\n        const userDetails = {\n            bio: this.state.bio,\n            location: this.state.location,\n            website: this.state.website,\n        };\n        this.props.editUserDetails(userDetails);\n        this.handleClose();\n    };\n\n    mapUserDetailsToState = (credentials) => {\n        this.setState({\n            bio: credentials.bio ? credentials.bio : '',\n            website: credentials.website ? credentials.website : '',\n            location: credentials.location ? credentials.location : '',\n        })\n    };\n\n    render() {\n        const {classes} = this.props;\n        return (\n            <Fragment>\n                <MyButton tip='Edit Details' placement='top' onClick={this.handleOpen} btnClassName={classes.button}>\n                    <EditIcon color='primary'/>\n                </MyButton>\n                <Dialog open={this.state.open}\n                        onClose={this.handleClose}\n                        fullWidth\n                        maxWidth='sm'>\n                    <DialogTitle>Edit your details</DialogTitle>\n                    <DialogContent>\n                        <form>\n                            <TextField\n                                name='bio'\n                                type='text'\n                                label='Bio'\n                                multiline\n                                rows='3'\n                                placeholder='A short bio about yourself'\n                                className={classes.textField}\n                                value={this.state.bio}\n                                onChange={this.handleChange}\n                                fullWidth/>\n                            <TextField\n                                name='location'\n                                type='text'\n                                label='Location'\n                                placeholder='Where you live'\n                                className={classes.textField}\n                                value={this.state.location}\n                                onChange={this.handleChange}\n                                fullWidth/>\n                            <TextField\n                                name='website'\n                                type='text'\n                                label='Website'\n                                placeholder='Your personal/professional website'\n                                className={classes.textField}\n                                value={this.state.website}\n                                onChange={this.handleChange}\n                                fullWidth/>\n                        </form>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color='primary'>Cancel</Button>\n                        <Button onClick={this.handleSubmit} color='primary'>Save</Button>\n                    </DialogActions>\n                </Dialog>\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    credentials: state.user.credentials\n});\n\nEditDetails.propTypes = {\n    classes: PropTypes.object.isRequired,\n    editUserDetails: PropTypes.func.isRequired\n};\n\nexport default connect(mapStateToProps, {editUserDetails})(withStyles(styles)(EditDetails));\n","import React, {Component, Fragment} from 'react';\nimport PropTypes from 'prop-types';\nimport {Link} from 'react-router-dom';\nimport dayjs from 'dayjs';\nimport EditDetails from './EditDetails';\nimport MyButton from '../../util/MyButton';\n\n// Redux\nimport {connect} from 'react-redux';\nimport {logoutUser, uploadImage} from \"../../redux/actions/userActions\";\n\n// MUI stuff\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Button from '@material-ui/core/Button';\nimport Paper from \"@material-ui/core/Paper\";\nimport MuiLink from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\n\n// Icons\nimport LocationOn from '@material-ui/icons/LocationOn';\nimport LinkIcon from '@material-ui/icons/Link';\nimport CalendarToday from '@material-ui/icons/CalendarToday';\nimport EditIcon from '@material-ui/icons/Edit';\nimport KeyboardReturn from '@material-ui/icons/KeyboardReturn';\n\nconst styles = (theme) => ({\n    paper: {\n        padding: 20\n    },\n    profile: {\n        '& .image-wrapper': {\n            textAlign: 'center',\n            position: 'relative',\n            '& button': {\n                position: 'absolute',\n                top: '80%',\n                left: '70%'\n            }\n        },\n        '& .profile-image': {\n            width: 200,\n            height: 200,\n            objectFit: 'cover',\n            maxWidth: '100%',\n            borderRadius: '50%',\n        },\n        '& .profile-details': {\n            textAlign: 'center',\n            '& span, svg': {\n                verticalAlign: 'middle'\n            },\n            '& a': {\n                // textDecoration: 'none',\n                color: theme.palette.primary.main\n            }\n        },\n        '& hr': {\n            border: 'none',\n            margin: '0 0 10px 0'\n        },\n        '& svg.button': {\n            '&:hover': {\n                cursor: 'pointer'\n            }\n        }\n    },\n    buttons: {\n        textAlign: 'center',\n        '& a': {\n            margin: '20px 10px'\n        }\n    }\n});\n\nclass Profile extends Component {\n    handleImageChange = (event) => {\n        const image = event.target.files[0];\n        const formData = new FormData();\n        formData.append('image', image, image.name);\n        this.props.uploadImage(formData);\n    };\n    handleEditPicture = () => {\n        const fileInput = document.getElementById('imageInput');\n        fileInput.click();\n    };\n    handleLogout = () => {\n        this.props.logoutUser();\n    };\n\n    render() {\n        const {\n            classes,\n            user: {\n                authenticated,\n                credentials: {handle, createdAt, imageUrl, bio, website, location},\n                loading\n            }\n        } = this.props;\n        let profileMarkeup = !loading ? (authenticated ? (\n            <Paper className={classes.paper}>\n                <div className={classes.profile}>\n                    <div className='image-wrapper'>\n                        <img className='profile-image' src={imageUrl} alt='profile'/>\n                        <input type='file' id='imageInput' onChange={this.handleImageChange} hidden/>\n                        <MyButton tip='Edit profile picture' placement='left-end' onClick={this.handleEditPicture} btnClassName='button'>\n                            <EditIcon color='primary'/>\n                        </MyButton>\n                    </div>\n                    <hr/>\n                    <div className='profile-details'>\n                        <MuiLink component={Link} to={`/users/${handle}`} color='primary' variant='h5'>\n                            @{handle}\n                        </MuiLink>\n                        <hr/>\n                        {bio && <Typography variant='body2'>{bio}</Typography>}\n                        <hr/>\n                        {Location && (\n                            <Fragment>\n                                <LocationOn color='primary'/>\n                                <span>{location}</span>\n                                <hr/>\n                            </Fragment>\n                        )}\n                        {website && (\n                            <Fragment>\n                                <LinkIcon color='primary'/>\n                                <a href={website} target='_blank' rel='noopner noreferrer'>\n                                    {website}\n                                </a>\n                                <hr/>\n                            </Fragment>\n                        )}\n                        <CalendarToday color='primary'/>{'  '}\n                        <span>Joined {dayjs(createdAt).format('MMM YYYY')}</span>\n                    </div>\n                    <MyButton tip='Logout' placement='top' onClick={this.handleLogout}>\n                        <KeyboardReturn color='primary'/>\n                    </MyButton>\n                    <EditDetails/>\n                </div>\n            </Paper>\n        ) : (\n            <Paper className={classes.paper}>\n                <Typography variant='body2' align='center'>\n                    No profile found, please login again\n                </Typography>\n                <div className={classes.buttons}>\n                    <Button variant='contained' color='primary' component={Link} to='/login'>Login</Button>\n                    <Button variant='contained' color='secondary' component={Link} to='/signup'>Signup</Button>\n                </div>\n            </Paper>\n        )) : (<p>loading</p>);\n        return profileMarkeup;\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    user: state.user\n});\n\nconst mapActionToProps = {logoutUser, uploadImage};\n\nProfile.propTypes = {\n    logoutUser: PropTypes.func.isRequired,\n    uploadImage: PropTypes.func.isRequired,\n    user: PropTypes.object.isRequired,\n    classes: PropTypes.object.isRequired\n};\n\nexport default connect(mapStateToProps, mapActionToProps)(withStyles(styles)(Profile));\n","import React, {Component} from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport PropTypes from 'prop-types';\n\n// Redux\nimport {connect} from 'react-redux';\nimport {getScreams} from '../redux/actions/dataActions';\n\nimport Scream from '../components/scream/Scream';\nimport Profile from '../components/profile/Profile';\n\nclass Home extends Component {\n\n    componentDidMount() {\n        this.props.getScreams();\n    }\n\n    render() {\n        const {screams, loading} = this.props.data;\n        let recentScreamsMarkup = !loading ? (\n            screams.map(scream => <Scream key={scream.screamId} scream={scream}/>\n            )\n        ) : <p>Loading...</p>;\n        return (\n            <Grid container spacing={2}>\n                <Grid item sm={8} xs={12}>\n                    {recentScreamsMarkup}\n                </Grid>\n                <Grid item sm={4} xs={12}>\n                    <Profile/>\n                </Grid>\n            </Grid>\n        );\n    }\n}\n\nHome.propTypes = {\n    getScreams: PropTypes.func.isRequired,\n    data: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n    data: state.data\n});\n\nexport default connect(mapStateToProps, {getScreams})(Home);\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport AppIcon from '../images/icon.jpg';\nimport {Link} from 'react-router-dom';\n\n// MUI stuff\nimport {withStyles} from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\n// Redux stuff\nimport {connect} from 'react-redux';\nimport {loginUser} from \"../redux/actions/userActions\";\n\nconst styles = (theme) => ({\n    form: theme.form,\n    image: theme.image,\n    textField: theme.textField,\n    button: theme.button,\n    customError: theme.customError,\n    progress: theme.progress\n});\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            password: '',\n            errors: {}\n        };\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        if (nextProps.UI.errors) {\n            this.setState({errors: nextProps.UI.errors});\n        }\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        const userData = {\n            email: this.state.email,\n            password: this.state.password\n        };\n        this.props.loginUser(userData, this.props.history);\n    };\n    handleChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    };\n\n    render() {\n        const {classes, UI: {loading}} = this.props;\n        const {errors} = this.state;\n        return (\n            <Grid container className={classes.form}>\n                <Grid item sm/>\n                <Grid item sm>\n                    <img className={classes.image} src={AppIcon} alt='dog'/>\n                    <form noValidate onSubmit={this.handleSubmit}>\n                        <TextField id='email' name='email' type='email' label='Email' className={classes.textField}\n                                   helperText={errors.email} error={!!errors.email}\n                                   value={this.state.email} onChange={this.handleChange}\n                                   fullWidth/>\n                        <TextField id='password' name='password' type='password' label='Password'\n                                   className={classes.textField}\n                                   helperText={errors.password} error={!!errors.password}\n                                   value={this.state.password} onChange={this.handleChange} fullWidth/>\n                        {errors.general && (\n                            <Typography variant='body2' className={classes.customError}>{errors.general}</Typography>\n                        )}\n                        <Button type='submit' variant='text' color='primary' className={classes.button}\n                                fullWidth disabled={loading}>\n                            Login\n                            {loading && (\n                                <CircularProgress className={classes.progress}/>\n                            )}\n                        </Button>\n                        <small>dont have an account ? sign up <Link to='/signup'>here</Link></small>\n                    </form>\n                </Grid>\n                <Grid item sm/>\n            </Grid>\n        );\n    }\n}\n\nLogin.propTypes = {\n    classes: PropTypes.object.isRequired,\n    loginUser: PropTypes.func.isRequired,\n    user: PropTypes.object.isRequired,\n    UI: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n    user: state.user,\n    UI: state.UI\n});\n\nconst mapActionsToProps = {\n    loginUser\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(Login));\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport AppIcon from '../images/icon.jpg';\nimport {Link} from 'react-router-dom';\n\n// MUI stuff\nimport {withStyles} from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\n// Redux stuff\nimport {connect} from 'react-redux';\nimport {signupUser} from \"../redux/actions/userActions\";\n\nconst styles = (theme) => ({\n    form: theme.form,\n    image: theme.image,\n    textField: theme.textField,\n    button: theme.button,\n    customError: theme.customError,\n    progress: theme.progress,\n});\n\nclass Signup extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            password: '',\n            confirmPassword: '',\n            handle: '',\n            errors: {}\n        };\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        if (nextProps.UI.errors) {\n            this.setState({errors: nextProps.UI.errors});\n        }\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        const newUserData = {\n            email: this.state.email,\n            password: this.state.password,\n            confirmPassword: this.state.confirmPassword,\n            handle: this.state.handle\n        };\n        this.props.signupUser(newUserData, this.props.history);\n    };\n    handleChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    };\n\n    render() {\n        const {classes, UI:{loading}} = this.props;\n        const {errors} = this.state;\n        return (\n            <Grid container className={classes.form}>\n                <Grid item sm/>\n                <Grid item sm>\n                    <img className={classes.image} src={AppIcon} alt='dog'/>\n                    <form noValidate onSubmit={this.handleSubmit}>\n                        <TextField id='email' name='email' type='email' label='Email' className={classes.textField}\n                                   helperText={errors.email} error={!!errors.email}\n                                   value={this.state.email} onChange={this.handleChange}\n                                   fullWidth/>\n                        <TextField id='password' name='password' type='password' label='Password'\n                                   className={classes.textField}\n                                   helperText={errors.password} error={!!errors.password}\n                                   value={this.state.password} onChange={this.handleChange} fullWidth/>\n                        <TextField id='confirmPassword' name='confirmPassword' type='password'\n                                   label='Confirm Password'\n                                   className={classes.textField}\n                                   helperText={errors.confirmPassword} error={!!errors.confirmPassword}\n                                   value={this.state.confirmPassword} onChange={this.handleChange} fullWidth/>\n                        <TextField id='handle' name='handle' type='text' label='Handle'\n                                   className={classes.textField}\n                                   helperText={errors.handle} error={!!errors.handle}\n                                   value={this.state.handle} onChange={this.handleChange} fullWidth/>\n                        {errors.general && (\n                            <Typography variant='body2' className={classes.custoemError}>{errors.general}</Typography>\n                        )}\n                        <Button type='submit' variant='text' color='primary' className={classes.button}\n                                fullWidth disabled={loading}>\n                            Signup\n                            {loading && (\n                                <CircularProgress className={classes.progress}/>\n                            )}\n                        </Button>\n                        <small>Already have an account ? login <Link to='/login'>here</Link></small>\n                    </form>\n                </Grid>\n                <Grid item sm/>\n            </Grid>\n        );\n    }\n}\n\nSignup.propTypes = {\n    classes: PropTypes.object.isRequired,\n    user: PropTypes.object.isRequired,\n    UI: PropTypes.object.isRequired,\n    signupUser: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n    user: state.user,\n    UI: state.UI\n});\n\nexport default connect(mapStateToProps, {signupUser})(withStyles(styles)(Signup));\n","import React, {Component, Fragment} from 'react';\nimport PropTypes from 'prop-types';\nimport dayjs from 'dayjs';\nimport {Link} from 'react-router-dom';\n\n// MUI stuff\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport MuiLink from \"@material-ui/core/Link/Link\";\n\n// Icons\nimport LocationOn from '@material-ui/icons/LocationOn';\nimport LinkIcon from '@material-ui/icons/Link';\nimport CalendarToday from '@material-ui/icons/CalendarToday';\n\nconst styles = (theme) => ({\n    paper: {\n        padding: 20\n    },\n    profile: {\n        '& .image-wrapper': {\n            textAlign: 'center',\n            position: 'relative',\n        },\n        '& .profile-image': {\n            width: 200,\n            height: 200,\n            objectFit: 'cover',\n            maxWidth: '100%',\n            borderRadius: '50%',\n        },\n        '& .profile-details': {\n            textAlign: 'center',\n            '& span, svg': {\n                verticalAlign: 'middle'\n            },\n            '& a': {\n                // textDecoration: 'none',\n                color: theme.palette.primary.main\n            }\n        },\n        '& hr': {\n            border: 'none',\n            margin: '0 0 10px 0'\n        }\n    }\n});\n\nconst StaticProfile = (props) => {\n    const {\n        classes,\n        profile: {handle, createdAt, imageUrl, bio, website, location},\n    } = props;\n    return (<Paper className={classes.paper}>\n        <div className={classes.profile}>\n            <div className='image-wrapper'>\n                <img className='profile-image' src={imageUrl} alt='profile'/>\n            </div>\n            <hr/>\n            <div className='profile-details'>\n                <MuiLink component={Link} to={`/users/${handle}`} color='primary' variant='h5'>\n                    @{handle}\n                </MuiLink>\n                <hr/>\n                {bio && <Typography variant='body2'>{bio}</Typography>}\n                <hr/>\n                {Location && (\n                    <Fragment>\n                        <LocationOn color='primary'/>\n                        <span>{location}</span>\n                        <hr/>\n                    </Fragment>\n                )}\n                {website && (\n                    <Fragment>\n                        <LinkIcon color='primary'/>\n                        <a href={website} target='_blank' rel='noopner noreferrer'>\n                            {website}\n                        </a>\n                        <hr/>\n                    </Fragment>\n                )}\n                <CalendarToday color='primary'/>{'  '}\n                <span>Joined {dayjs(createdAt).format('MMM YYYY')}</span>\n            </div>\n        </div>\n    </Paper>)\n};\n\nStaticProfile.propTypes = {\n    profile: PropTypes.object.isRequired,\n    classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(StaticProfile);\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport Scream from '../components/scream/Scream';\nimport {FIREBASE_CORE_HOST} from \"../constants/Constants\";\nimport StaticProfile from '../components/profile/StaticProfile';\n\n// Redux\nimport {connect} from 'react-redux';\nimport {getUserData} from \"../redux/actions/dataActions\";\n\n// MUI stuff\nimport Grid from '@material-ui/core/Grid';\n\nclass User extends Component {\n    state = {\n        profile: null,\n        screamIdParam: null\n    };\n\n    componentDidMount() {\n        const handle = this.props.match.params.handle;\n        const screamId = this.props.match.params.screamId;\n        if (screamId) this.setState({screamIdParam: screamId});\n        this.props.getUserData(handle);\n        axios.get(`${FIREBASE_CORE_HOST}/user/${handle}`)\n            .then(res => {\n                this.setState({profile: res.data.user})\n            })\n            .catch(err => console.log(err));\n    }\n\n    render() {\n        // TODO: 解决在用户界面中，跳转其他用户的问题\n        const {screams, loading} = this.props.data;\n        const {screamIdParam} = this.state;\n        let screamsMarkup = !loading ? screams.length === 0 ? (\n                <p>No screams from this user</p>\n            ) : !screamIdParam ? (\n                screams.map(scream => <Scream key={scream.screamId} scream={scream}/>\n                )\n            ) :\n            (\n                screams.map(scream => {\n                    if (scream.screamId !== screamIdParam)\n                        return <Scream key={scream.screamId} scream={scream}/>;\n                    else return <Scream key={scream.screamId} scream={scream} openDialog={true}/>\n                })\n            ) :\n            <p>Loading...</p>;\n        return (\n            <Grid container spacing={2}>\n                <Grid item sm={8} xs={12}>\n                    {screamsMarkup}\n                </Grid>\n                <Grid item sm={4} xs={12}>\n                    {this.state.profile === null ? (<p>Loading profile</p>) : (\n                        <StaticProfile profile={this.state.profile}/>)}\n                </Grid>\n            </Grid>\n        );\n    }\n}\n\nUser.propTypes = {\n    getUserData: PropTypes.func.isRequired,\n    data: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    data: state.data\n});\n\nexport default connect(mapStateToProps, {getUserData})(User);\n","import React, {Component} from 'react';\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport './App.css';\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\nimport createMuiTheme from '@material-ui/core/styles/createMuiTheme';\nimport customTheme from './theme/theme';\nimport jwtDecode from 'jwt-decode';\nimport axios from 'axios';\n\n// Redux\nimport {Provider} from 'react-redux';\nimport store from './redux/store';\nimport {SET_AUTHENTICATED} from \"./redux/types\";\nimport {logoutUser, getUserData} from \"./redux/actions/userActions\";\n\n// Components\nimport Navbar from './components/layout/Navbar';\nimport AuthRoute from './util/AuthRoute';\n\n// Pages\nimport Home from './pages/Home';\nimport Login from './pages/Login';\nimport Signup from './pages/Signup';\nimport User from './pages/User';\n\nconst theme = createMuiTheme(customTheme);\n\nconst token = localStorage.FBIdToken;\nif (token) {\n    const decodedToken = jwtDecode(token);\n    if (decodedToken.exp * 1000 < Date.now()) {\n        // window.location.href = '/login';\n        store.dispatch(logoutUser());\n    } else {\n        store.dispatch({type: SET_AUTHENTICATED});\n        axios.defaults.headers.common['Authorization'] = token;\n        store.dispatch(getUserData());\n    }\n}\n\nclass App extends Component {\n    render() {\n        return (\n            <MuiThemeProvider theme={theme}>\n                <Provider store={store}>\n                    <Router basename='/socialape-client'>\n                        <Navbar/>\n                        <div className='container'>\n                            <Switch>\n                                <Route exact path=\"/\" component={Home}/>\n                                <AuthRoute path=\"/login\" component={Login}/>\n                                <AuthRoute path=\"/signup\" component={Signup}/>\n                                <Route exact path=\"/users/:handle\" component={User}/>\n                                <Route exact path='/users/:handle/scream/:screamId' component={User}/>\n                            </Switch>\n                        </div>\n                    </Router>\n                </Provider>\n            </MuiThemeProvider>\n        )\n    }\n}\n\nexport default App;\n","export default {\n    palette: {\n        primary: {\n            light: '#33c9dc',\n            main: '#00bcd4',\n            dark: '#008394',\n            contrastText: '#fff'\n        },\n        secondary: {\n            light: '#ff6333',\n            main: '#ff3d00',\n            dark: '#b22a00',\n            contrastText: '#fff'\n        }\n    },\n    form: {\n        textAlign: 'center'\n    },\n    image: {\n        margin: '20px auto 20px auto',\n        maxWidth: 100,\n        maxhHeight: 100\n    },\n    textField: {\n        margin: '10px auto 10px auto'\n    },\n    button: {\n        margin: '20px auto 20px auto',\n        position: 'relative'\n    },\n    customError: {\n        color: 'red',\n        fontSize: '0.8rem',\n        marginTop: 10\n    },\n    progress: {\n        position: 'absolute'\n    },\n    invisibleSeparator: {\n        border: 'none',\n        margin: 4\n    },\n    visibleSeparator: {\n        width: '100%',\n        borderBottom: '1px solid rgba(0,0,0,0.1)',\n        marginBottom: 20\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/icon.9a85a5b9.jpg\";"],"sourceRoot":""}